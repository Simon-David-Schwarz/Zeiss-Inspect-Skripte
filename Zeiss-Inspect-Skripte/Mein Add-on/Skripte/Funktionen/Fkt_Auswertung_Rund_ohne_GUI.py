# -*- coding: utf-8 -*-

import gom
def Fkt_Auswertung_Rund_ohne_GUI():

	import gom
	import os
	import numpy as np
	
	#================================================================================================================================#
	#
	# Voraussetzungen für Skript:
	# - Bauteilexport in Maschinenkoordinaten nach VDI 3432
	# - Einzelne Schnitte an Rohrinnenbogen und -außenbogen mit den Bezeichnungen "Schnitt_Innenbogen" und "Schnitt_Aussenbogen"
	# - Fit-Zylinder an den Rohrenden mit den Bezeichnungen "Hüllzylinder 1" und "Hüllzylinder 2"
	#================================================================================================================================#
	# Projekt aktualisieren
	gom.script.sys.recalculate_project (with_reports=False)
	#================================================================================================================================#
	# Widget1 Winkelauflösung 
	RESULT1=gom.script.sys.execute_user_defined_dialog (file='Widget1 E Winkelauflösung.gdlg')
	#================================================================================================================================#
	# Winkelauflösung für Auswertung festlegen
	startwinkel = RESULT1.Input_Startwinkel   #EINGABE (in der Regel = 0)
	schrittweite = RESULT1.Input_Schrittweite #EINGABE
	#================================================================================================================================#
	# Widget2 Schnitte gerader Profilabschnitt
	RESULT2=gom.script.sys.execute_user_defined_dialog (file='Widget2 E Schnitte Gerader Profilabschnitt.gdlg')
	#================================================================================================================================#
	# Distanz & Schrittweite für Schnitte in geraden Profilabschnitten festlegen
	begin_dist_gerader_profilabschnitt = RESULT2.Input_Beginndistanz # EINGABE (in der Regel 0)
	end_dist_gerader_profilabschnitt = RESULT2.Input_Enddistanz # EINGABE	
	anzahl_schnitte_gerade = RESULT2.Input_Anzahl  # EINGABE
	inkrement = np.divide(end_dist_gerader_profilabschnitt, anzahl_schnitte_gerade) # BERECHNUNG
	#================================================================================================================================#
	# Widget3 Parameterauswahl Messchieberfunktion 
	RESULT3=gom.script.sys.execute_user_defined_dialog (file='Widget3 E Parameter_fuer_Messchieber.gdlg')
	#================================================================================================================================#
	# Parameter für Messschieberfunktion
	rohrdurchmesser = RESULT3.Rohrdurchmesser #EINGABE
	biegefaktor = RESULT3.Biegefaktor #EINGABE
	biegeradius = RESULT3.Biegeradius #EINGABE (Biegeradius nominell)
	messschieber_abstand = np.multiply(np.divide(rohrdurchmesser,2),1.1) # BERECHNUNG
	radius_schneide = np.multiply(np.multiply(biegefaktor,1.5),rohrdurchmesser) # BERECHNUNG
	#================================================================================================================================#
	# Widget4 Diskretisierung der SPL 
	RESULT4=gom.script.sys.execute_user_defined_dialog (file='Widget4 E Diskretisierung_SPL.gdlg')
	
	# Diskretisierung (Punktabstand) für Krümmungsverlauf der Schwerpunktlinie festlegen
	diskretisierung_schwerpunktlinie = RESULT4.input_Diskretisierung_SPL # EINGABE
	#================================================================================================================================#
	# Inspektionselemente erzeugen
	# -> schnittebenen_bogen
	schnittebenen_bogen_linear1 = list()
	schnittebenen_bogen = list()
	schnittebenen_bogen_linear2 = list()
	# -> Schnitte im Bogenbereich
	linearschnitte1 = list()
	bogenschnitte = list()
	linearschnitte2 = list()
	# -> Schnittlinien
	schnittlinien_linear1 = list()
	schnittlinien_bogen = list()
	schnittlinien_linear2 = list()
	# -> Schnittpunkte
	schnittpunkte_innen = list()
	schnittpunkte_aussen = list()
	# -> Abstand vertikal (Nebenachse HQ und Hauptachse nach VDI 3430)
	abstaende_vertikal = list()
	abstaende_horizontal = list()
	# -> Schwerpunkte aus Schnitten
	schwerpunkte = list()
	#-> Flächenvergleich auf Querschnitte anwenden
	flaechenvergleiche_querschnitte = list()
	#-> Abweichungsfähnchen Flächenvergleich
	abweichungsfahnen_flaechenvergleich_MIN = list()
	abweichungsfahnen_flaechenvergleich_MAX = list()
	#================================================================================================================================#
	# Ist-Elemente durch "referenzierte Konstruktion" der Hüllzylinder erstellen
	gom.script.inspection.inspect_by_referenced_construction (elements=[gom.app.project.inspection['Hüllzylinder 2'], gom.app.project.inspection['Hüllzylinder 1']])
	
	# Ist-Elemente durch "referenzierte Konstruktion" der Schnitte am Innen- und Außenbogen erstellen
	gom.script.inspection.inspect_by_referenced_construction (elements=[gom.app.project.inspection['z-Schnitt_Innenbogen'], gom.app.project.inspection['z-Schnitt_Aussenbogen']])
	
	#===============================================================================
	# Biegemittelpunkt ermitteln
	
	#-> Fittingkurve auf Soll-Schnitt am Außenbogen
	MCAD_ELEMENT=gom.script.curve.create_fitting_curve (
		curve=gom.app.project.inspection['z-Schnitt_Aussenbogen'], 
		name='Fittingkurve_Aussenbogen_fuer_Ber_Biegemittelpunkt', 
		properties=gom.Binary ('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'), 
		target=gom.app.project.parts['Bauteil'].nominal)
	
	#-> Fittingkurve auf Soll-Schnitt am Innenbogen und Ist-Elemente durch "referenzierte Konstruktion" der Fitting-Kurven erstellen
	MCAD_ELEMENT=gom.script.curve.create_fitting_curve (
		curve=gom.app.project.inspection['z-Schnitt_Innenbogen'], 
		name='Fittingkurve_Innenbogen_fuer_Ber_Biegemittelpunkt', 
		properties=gom.Binary ('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'), 
		target=gom.app.project.parts['Bauteil'].nominal)
	
	gom.script.inspection.inspect_by_referenced_construction (elements=[gom.app.project.inspection['Fittingkurve_Innenbogen_fuer_Ber_Biegemittelpunkt'],
		gom.app.project.inspection['Fittingkurve_Aussenbogen_fuer_Ber_Biegemittelpunkt']])
	
	#-> Zwischenkurve erstellen und über "referenzierte Konstruktion" als Ist-Element erzeugen
	MCAD_ELEMENT=gom.script.curve.create_division_curve (
		curve=gom.app.project.inspection['Fittingkurve_Aussenbogen_fuer_Ber_Biegemittelpunkt'], 
		curve2=gom.app.project.inspection['Fittingkurve_Innenbogen_fuer_Ber_Biegemittelpunkt'], 
		name='Zwischenkurve(fuer_Ber_Mittelpunkt)', 
		position=0.5, 
		properties=gom.Binary ('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'))
	
	gom.script.inspection.inspect_by_referenced_construction (elements=[gom.app.project.inspection['Zwischenkurve(fuer_Ber_Mittelpunkt)']])
	
	#-> Fitting-Kreis an Zwischenkurve und über "referenzierte Konstruktion als Ist-Element erzeugen
	gom.script.cad.show_element_exclusively (elements=[gom.app.project.inspection['Zwischenkurve(fuer_Ber_Mittelpunkt)']])
	
	gom.script.selection3d.select_by_circle (
		circle={'center': gom.Vec3d (0.0, 0.0, 0.0), 'normal': gom.Vec3d (0.0, 0.0, 1.0), 'radius': biegeradius}, 
		is_hollow=False, 
		target=gom.app.project.inspection['Zwischenkurve(fuer_Ber_Mittelpunkt)'])
	
	MCAD_ELEMENT=gom.script.primitive.create_fitting_circle (
		method='best_fit', 
		name='Fittingkreis_fuer_Ber_Mittelpunkt', 
		properties=gom.Binary ('eAHEmF1sW2cZx38p3cjC0i6jjK0gMGmgYZvz1TRN3Y6WrpnakZaqzbKpAizHPkm8OrZrO00zGHPYxcaXpl3wIW5AAoagUlEv0AAhNiSQpgl14oIxDe0CgQQSRUy7oKjSWvR/3vPmHCdOaoQqHMV+fc57nu/n//xfT5TmkpM7+85yaOzjB8eOM1HJ5GvVVGqsEMwFxdqxSqkcVGr5oIp7tXELnR100ElHJ7D0oyvBLHBy7PCJE4nDR08cG7t/IjE0MLQjfCB8XTzXji61+Qstvdq2A1NHL55rYwh4L9QDCgTMkWaeKgFppilRIU2eIlXKBGSpkadEka6/Xzy3gVuBjVCfokSJAp85L4lmSr1dy4NAAuoFMkwhFWlqpqaMrmmdpkyGLKfIMGPfKwRME9hnkSwBX++TunuBLVCfocQcfRxreO74qqcOfUU27AP2WKQ2Mgg8d+bbv/jE6+OXfvytC1/8+b+fP3AT1AfpY4A+Rnkn1A83OMxrow92StCdQEcTZ85S49oVGXgbcDPUq9SoWNxm6H1Nz169Cd7eQH0vs9SYo8DH0DogQ87WcwTUyJAgaxFWaPR+H90M0k2CIhnbpSunTX7WpAXIgm6TIs2LlsmErZQ17fe7+slSpWq7y9xLggJ5EnyWBAvMkredScu3khKQIkHZUpFkgQoZyuwhwePspT+mT9r7GzxSVeRYJBHbJVtUV/JM8gLyzJgXKYYZYMBkRzsif1IUrR7nyFBgT+ivIjYV+jvFjMWuYPukaRvTsT/FUDZVyFlxaYeLrPwsUDCfc+TCzOn+QMN9H5XofjKUENmpp+JakjGbUmwjy8Dyv3xt3BvJSVE1X/LkbJ/8rjBjupPUKFEmxQBlzja5L6k12zW3zi7Fbdpiv5YcVZnPj9/jI18JP3Or/D9j8RVWZC1bSXuXpCIp5synnGVNnjVGPWnXnVXDTe832tRMQhSdZndXxsZ75LJbXOVNq9XYY/6qtnut2wRxqjbFQrDnujFtOnKkrWYcBH6UnrCbnAWypt8i+/+PcPMc3KgINyLCyH+NCD3h1FK31EjQu4yawrpu7rF+1brKLCUWbN4VDffuY9rqVNNv/YwoN676tfII5L6ruoR67luE9l/4h+bAKLB1xQxxNVMM56usT1u36EqaBeuWGrM8drNmTALYBPX7Vz318PLO31+WrveDzSytNwEadNUQPwu89Ol/DutOs6nmY3N1cf0p31Z/WiK8SRGFkPF+BFatLZaek6jjwHaoT4TAlGKcwKa+WmLIrhwkb2POPanQaB43StO+CRtGStzZp2TFR4Du0F3vVJ6KNaDSc8Zaq8ajd0x+VXvuBt69IhVqxkZuMs+8hfUPR2T/HcAtDfY/xEMcJkfqZ5J5EpgMbRgHeqA+TIYRg7RRdpEhyU6GGGSYpI28UXaTZIocWXbY3Qy7GSFrT0yxk0Hb9alj55ck9wNA5wq7HeD6eGVH4mmT/fL7kQt6emPIFfd36ZvP3Hr87EK/pK1NbTwJPBrSk/TrkqxsdK2QHB91aeasUQKe2Cf5PmMHYgP6SLhjs8VzK1j8tfY6RQmsTd76vMXfS4n74+H76nekZwvQHuOQD4R3n/2anj8Exlm1TgHvWd4puF40yHYkuZmGOPU+f2nzByVlNb0WyZJXItbTIfwIAlR38yY/x4t74xlU3JrS617g9hXuNgY54kNHXpFIX8CeQgtF3JQafETm3u4KwgKgUgGu7Vv67nZ93wvClFibuwnmSbvay68DC5XjqP7M8PATssC3nbfgk0zxaIh9qyn8+N3SrOJT0cYPOV1mYw/obkPCp8JjwQwVShbeHM8npfso8OGG9n3AWIkDnvHlQ8oBMjYFdFXrldKiqC39RlYoD7JEOtqjKqjPrrwiZvC9texunAMuZq8caJa1SYvXDnKcvkfSVkKfTPjy+csvAC9mXr2iz/oPp17+5Uvvu21TXHveOGbaJDWWtDsDJn8g7b7Z1izDEeAuQ9u1xPmB4ktjngI1qjx5V0sK1JbdLSpQAynjes+yiIBGzPlUCJH/eqMllQMObRoKyxdU2RB1hrQp8eM/x1svrC86HJe+B6Nx6cPz52+0JOBBYNt1batyijxlI51Krz9sOjrqCUaV06/Gla6eFiqm/W3xsoljnyudxjj81ZD2umWzGhoda5OBeWMpYs2CS/WfM7bK4Ock3I+jnCXEJeCbEzIy1n/caRjRbBQ5s8uUbGh6hPrjZcn2+fEI1Uq3RU0frdp5w/LdFw6S1WGTrzqVawiUSXOGPAELdM3eCDv8cNRpXhQrHTuZ/ml3M40Rzq0xHb70t2tbfvXkLnkp6rW5qZfxc/szbzfT879GuNkcdBnWWV6QE02hvxRvhAXN5pCzoBqegR1klF6W9laq9819e+rrV4+fc65uVMeuD57ZJR3Xbb+1y1JHDtd4xdAB9XfAT59qSbDOHbdab8oq90OfcFgWPkbA45MSIzr3LqiL7ke7POU7aXO/tROMnw5r6dMEkCuqeYcqEfHSlFPMVB+CyV7jKC3HThQns0xfRKPkaM6uatopRTpsVTn4ZkuCfeyi2eCooTsQ1fj+fonx9eM5lirL/c4YcrY6Bti+JyNpzQz+7U9aMs03WSRMP0FFECripxQrfZe2tiRy2J1QYyJFDSp2DlfRpY2ZChPlu2aDw+lnr0p8B/AOYwW6+7tfe/83APs/9B8AAAD//wMAFCWLLQFlkQ=='), 
		sigma=2)
	#==================================================================================================================================================================#
	#gom.script.selection3d.select_all ()
	#
	#MCAD_ELEMENT=gom.script.primitive.create_fitting_circle (
	#	method='best_fit', 
	#	name='Fittingkreis_fuer_Ber_Mittelpunkt', 
	#	normal={'direction': gom.Vec3d (0.0, 0.0, 1.0), 'point': gom.Vec3d (0.0, 0.0, 0.0), 'type': 'projected'}, 
	#	properties=gom.Binary ('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'), 
	#	sigma=2)
	
	gom.script.inspection.inspect_by_referenced_construction (elements=[gom.app.project.inspection['Fittingkreis_fuer_Ber_Mittelpunkt']])
	
	
	#-> Mittelpunkt des Fittingkreises als Bogenmittelpunkt konstruieren und über "referenzierte Konstruktion" als Ist-Element erzeugen
	MCAD_ELEMENT=gom.script.primitive.create_point (
		name='Bogenmittelpunkt', 
		point=gom.app.project.inspection['Fittingkreis_fuer_Ber_Mittelpunkt'], 
		properties=gom.Binary ('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'))
	
	gom.script.inspection.inspect_by_referenced_construction (elements=[gom.app.project.inspection['Bogenmittelpunkt']])
	
	#==================================================================================================================================================================#
	#-> Linie konstruieren, die orthogonal zum Hüllzylinder 1 steht und durch den Bogenmittelpunkt verläuft
	MCAD_ELEMENT=gom.script.primitive.create_perpendicular_line (
		line=gom.app.project.inspection['Hüllzylinder 1'], 
		name='Ausrichtungslinie_fuer_Koord-Syst', 
		point=gom.app.project.inspection['Bogenmittelpunkt'], 
		properties=gom.Binary ('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'))
	
	gom.script.inspection.inspect_by_referenced_construction (elements=[gom.app.project.inspection['Ausrichtungslinie_fuer_Koord-Syst']])
	
	#-> Koordinatensystem erzeugen und als Ist-Koordinatensystem als über "referenzierte Konstruktion" erstellen
	MCAD_ELEMENT=gom.script.cs.create_element_by_orientation (
		direction_x=gom.app.project.inspection['Ausrichtungslinie_fuer_Koord-Syst'], 
		direction_y=gom.app.project.inspection['Hüllzylinder 1'], 
		orientation='xy', 
		origin=gom.app.project.inspection['Bogenmittelpunkt'], 
		properties=gom.Binary ('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'))
	
	gom.script.inspection.inspect_by_referenced_construction (elements=[gom.app.project.inspection['Koordinatensystem']])
	
	#==================================================================================================================================================================#
	# Übergangsebenen konstruieren
	
	MCAD_ELEMENT=gom.script.primitive.create_plane_by_point_normal (
		name='Übergangsebene 1', 
		normal=gom.app.project.inspection['Hüllzylinder 1'], 
		point=gom.app.project.inspection['Bogenmittelpunkt'], 
		properties=gom.Binary ('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'))
	
	gom.script.inspection.inspect_by_referenced_construction (elements=[gom.app.project.inspection['Übergangsebene 1']])
	
	MCAD_ELEMENT=gom.script.primitive.create_plane_by_point_normal (
		name='Übergangsebene 2', 
		normal=gom.app.project.inspection['Hüllzylinder 2'], 
		point=gom.app.project.inspection['Bogenmittelpunkt'], 
		properties=gom.Binary ('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'))
	
	gom.script.inspection.inspect_by_referenced_construction (elements=[gom.app.project.inspection['Übergangsebene 2']])
	
	# Nur Ist-Bauteil einblenden
	gom.script.cad.show_element_exclusively (elements=gom.ElementSelection ({'category': ['key', 'elements', 'part', gom.app.project.parts['Bauteil'], 'explorer_category', 'actual_part']}))
	#================================================================================================================================#
	# Schnitte im ersten geraden Profilabschnitt
	lineare_aufloesung = dict()
	# lineare_aufloesung['Rohr_1'] = np.append(np.arange(begin_dist_gerader_profilabschnitt, end_dist_gerader_profilabschnitt, inkrement), end_dist_gerader_profilabschnitt)
	lineare_aufloesung['Rohr_1'] = np.arange(begin_dist_gerader_profilabschnitt, end_dist_gerader_profilabschnitt, inkrement)
	
	# Konstruktion von Ebenen mit Ist-Elementen erzeugt Ist-Elemente und Konstruktion mit Soll-Elementen erzeugt Soll-Elemente
	
	for distance in lineare_aufloesung['Rohr_1']:
		#Schnittebene erzeugen
		schnittebene_linear1 = 'A_Schnittebene_linear1_' + str(distance)
		schnittebenen_bogen_linear1.append(schnittebene_linear1)
		
		# parallele Ebenen erzeugen
		MCAD_ELEMENT=gom.script.primitive.create_parallel_plane (
			distance=np.subtract(distance, end_dist_gerader_profilabschnitt), 
			name=schnittebene_linear1, 
			plane=gom.app.project.actual_elements['Übergangsebene 1'], 
			properties=gom.Binary ('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'))
		gom.script.inspection.create_linked_nominal_element (elements=[gom.app.project.actual_elements[schnittebene_linear1]])
		
		gom.script.cad.edit_tags (
			add_tags=['Schnittebenen_erster_gerader_Profilabschnitt'], 
			elements=[gom.app.project.actual_elements[schnittebene_linear1]])
		
		# Schnitte basierend auf parallelen Ebenen erzeugen
		linearschnitt1 = 'A_Linearschnitt1_' + str(distance)
		linearschnitte1.append(linearschnitt1)
		gom.script.selection3d.deselect_all ()
		gom.script.selection3d.invert_selection ()
		
		# Schnitte durch Verschneiden der schnittebenen_bogen mit Rohrgeometrie erzeugen
		MCAD_ELEMENT=gom.script.section.create_single_section_by_plane (
			name=linearschnitt1,
			position=0.0, 
			project_onto_theoretical_surface=True, 
			properties=gom.Binary ('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'), 
			reference_plane=gom.ActualReference (gom.app.project.inspection[schnittebene_linear1]))
	
		gom.script.cad.edit_tags (
			add_tags=['Schnitte_erster_gerader_Profilabschnitt'], 
			elements=[gom.app.project.actual_elements[linearschnitt1]])
	
	# Nur Ist-Bauteil einblenden
	gom.script.cad.show_element_exclusively (elements=gom.ElementSelection ({'category': ['key', 'elements', 'part', gom.app.project.parts['Bauteil'], 'explorer_category', 'actual_part']}))
	#================================================================================================================================#
	# Schnitte im zweiten geraden Profilabschnitt
	
	# (Hinweis:) Konstruktion von Ebenen mit Ist-Elementen erzeugt Ist-Elemente und Konstruktion mit Soll-Elementen erzeugt Soll-Elemente)
	lineare_aufloesung2 = dict()
	# lineare_aufloesung['Rohr_1'] = np.append(np.arange(begin_dist_gerader_profilabschnitt, end_dist_gerader_profilabschnitt, inkrement), end_dist_gerader_profilabschnitt)
	lineare_aufloesung2['Rohr_1'] = np.arange(begin_dist_gerader_profilabschnitt + inkrement, end_dist_gerader_profilabschnitt, inkrement)
	
	for distance in lineare_aufloesung2['Rohr_1']:
		#Schnittebene erzeugen
		schnittebene_linear2 = 'C_Schnittebene_linear2_' + str(distance)
		schnittebenen_bogen_linear2.append(schnittebene_linear2)
		
		# parallele Ebenen erzeugen
		MCAD_ELEMENT=gom.script.primitive.create_parallel_plane (
			distance=-distance + 1, 
			name=schnittebene_linear2, 
			plane=gom.app.project.actual_elements['Übergangsebene 2'], 
			properties=gom.Binary ('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'))
		gom.script.inspection.create_linked_nominal_element (elements=[gom.app.project.actual_elements[schnittebene_linear2]])
		
		gom.script.cad.edit_tags (
			add_tags=['Schnittebenen_zweiter_gerader_Profilabschnitt'], 
			elements=[gom.app.project.actual_elements[schnittebene_linear2]])
		
	# Schnitte basierend auf parallelen Ebenen erzeugen
		linearschnitt2 = 'C_Linearschnitt2_' + str(distance)
		linearschnitte2.append(linearschnitt2)
		gom.script.selection3d.deselect_all ()
		gom.script.selection3d.invert_selection ()
		
		# Schnitte durch Verschneiden der schnittebenen_bogen mit Rohrgeometrie erzeugen
		MCAD_ELEMENT=gom.script.section.create_single_section_by_plane (
			name=linearschnitt2,
			position=0.0, 
			project_onto_theoretical_surface=True, 
			properties=gom.Binary ('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'), 
			reference_plane=gom.ActualReference (gom.app.project.inspection[schnittebene_linear2]))
			
		gom.script.cad.edit_tags (
			add_tags=['Schnitte_zweiter_gerader_Profilabschnitt'], 
			elements=[gom.app.project.actual_elements[linearschnitt2]])
	#================================================================================================================================#
	# Inspektionselemente für Auswertung des Bauteilwinkels erstellen
	name_winkel = 'Bauteilwinkel'
	
	# -> Winkel konstruieren
	MCAD_ELEMENT=gom.script.inspection.create_angle_by_2_directions (
		direction1={'glue_transformed': False, 'inverted': True, 'target': gom.app.project.actual_elements['Hüllzylinder 1'], 'type': 'direction'}, 
		direction2={'glue_transformed': False, 'inverted': True, 'target': gom.app.project.actual_elements['Hüllzylinder 2'], 'type': 'direction'}, 
		name=name_winkel, 
		properties=gom.Binary ('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'))
	
	# -> Winkel auswerten
	MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
		angle_restriction='xyz', 
		elements=[gom.app.project.actual_elements['Bauteilwinkel']], 
		nominal_value=0.0, 
		nominal_value_source='fixed_value',
		name='Maß_Bauteilwinkel', 
		properties=gom.Binary ('eAHsW32MVFcV/22DFBDKh2hbtHYcFligszu7wHZ3YNllYQlbAQnQpcHIZGZndndkdneYmQUWUzsNf1Qraf2IrfEfNNY2BlNDNEGNpmpsUr9oNBGJpjWK3yFp7R/WNBbM79x39r438+Zjd7sQWoaw++a9+86599xzfufjnt0/Ohzq29B4HDt6tmzr2Yv92Vgqn4tEetLJ4eRIfk92NJPM5lPJHMynDnOxYB7mYQHmLQDwhf89nxwCcLCnd9++QO/ufXt6tu4PtIRb1jkvOJ/zZ+aAt+r0Rm0fvtI/+/yZOrQBWAYU0oghjiTSiKIfoxjBCJLoRx6jyCKKNFJyJ4pjSCGBPIZwYvb5M7cgAOA2oLC15K0DEyN/+zp5fQDAHTLpOr6BdwGFHIYRQxppvPCxV9bzCUfMK5pRHkkcRx5X3yDHRQBmy7t5ZGVeg2i4yHf33g08sxCFTRhCHsNIYzN4nUQMCbkeRhJ5xBBwVknK/NmBIJoRRAAjiMko3jki9PuFmplBUKiQ8zjSSCIgVxlnvI5qQj9yyMnoDO5BQOQXwCcQwDEMISUjQ8ghgxj6kUQEAWSQlbvHkEUMGWxEAA9iE5pc/Mi9ybOiOEaRwDgCrlGcy4CzPtJLIoVBWUUE6xFGWGjbEXY9EYzIjptd2eislxKLO+uNY1Bkl5Zx5LQcA65/lCHnlEUCSWeEkSzXyZ3mmhNIODvH52HPc5WKfR5yKNh58i03l5BrThEsRz/CE/+5Vu9YSyeCnKyFOs1xXHcWg8I7JNqfQQRhZHDc5zmp5mXUcIVRlNuAyL4cHWqZ7o+OUclnnd8JR2fTjtaMiOQ2+MjlqMg9L5rLXQzJT3IYQQTDstaE7CZX7N2NkNw3s13v+9w9V/8RVmp+9ItlpivVVRXvstVSrx63TlqP6ydsu96xKsOR3JtEwnqlMtfflL3VGcr92snY6G/xLk1PxptRL9pBhGgQzMo49kzNiU5gWlTkk0BUVh8T1FqNStK7vrKaCX2krKgJDYKMtB56CPpJSmtAJEYfQnSzknvnSonInceYIyP1jrwyvvGdKxn6w6NIiR2lxPYmJxWL4kQg6puJX7JvOx9gbY6xF+PQwzXLqhx+e6WnXq40qrh2yP5WolXlCM3GnH7RmTf68noaapr3eWl0Zp57/aM33rLx4ts3NrvW+uUfF7ijM/8R04scivf5rYzOssggh0aMIYekRB30tcxHx5B1vGwejEk0mmWexnsBdEomRi+dc6JexvFu/8MMJi5UvBi8GmudN5mRmDhHvTlH847JAhW1+UaDjI0KrSSOySxzGJd7jKTMHDoRxCoEEUEQQaxGQPI8XlePoewqaYMzj1f+2nL99MniiV9OylieuVcAN7WmOG+hB9R8XTMaM8ZE517NsjtciuI3pi/UvK48VlXTLS+GHBWJjUn1owMdCKAXu9GHLdiJXmxDQDInaiLRYgxpQSmiicGnnIMbjROYYStrjAYNThAliKam9pIvQTI7C9aTgliLNgSltpTDEEYFg8YwIrWlDgwIXeJoLfH2TY24MTSiuoZR42KihRxLH+rWG6s1N3XGVBdDUhl01/Bqr0dV1xnWmqMYQArHnd2wyMyIwdRD3TX1ABrE/o+DV0TxnFwRy4loDR6M4PfqOlGadyqCtNaIIKth/pVGLdWxdvpVOy8aa0VBsZh1YMpG68kGebk3GsfRrzE+nJqslE/YoUKkNnHcVOmtxCDyUtWzNA8JZY0Pj8pPSlzv+EWM1WVfTUPd/maq65msLpXq0NTjE2+u6q5dX9to1lq196ShNHv2zrj0ebns2p668Z1mqX2v8D0j8Prymc8b/KsYNqosd44wU3loNZ23tYi45Ii16L0f8t34Wjt9/DA5sJ6YRjEoSMyKpDkrYLbhxcwgGqaIZdP3I5Ofra6sFLOureyMD1jtKzmrh7wyJ1a88s8AK41hJMSTZEPBnqD/NMaz9SCAhUDBVGe0I+CwE9do9ePQT3hCPx/ALKBAijyxPPQsKUiTQmEOL7cBbBzwtB1QYYblIMooT1TSOJZ+Y6JYfgcuTzSS3T0AlgKFQTmgacQez3t7S45pdpziHDoBbJR2hFloBvD00dM/+PDvd17+1pfPfvr7/z3XzfaEZjQijEa04Vag0CvJHIMPFoNwse2+BSSk7BnNcQnMw4yMTBWoH1HJ61izosx+MVBZRnWFT5GsXyOEhu1XxiuTcMS8BsB7qop5DGNyJvy7XST6PgBzgcJ+51Q7gvtxP3qRQOR7pHkQQJ/TxbETQD1QCKMNrehHMwaQwHqEsA4xtCMOntw3I4l2ibQ3II4EQmhHG9oRRjta0Y4EwhhAM+J449Ur3yDdeoBdHgX6CMqUeKI1OZ7XM7vht6++nzNWzeSMvaP3ucaubFGJrHRmz36U+UCBlSRG5sVvv7DokV9x3AcBLCiSoqmMaGbf3+reDkqTVckHzvLtWU57TtdiftNuGXe/TbHin20itfJdLksAUUcqttYbcth6mvS5tsVF9N21+CiGxcqTeKiTXFTJukVDTcfGLmfEQpHSMkB0gtdq15SYdAO99knRCdUzI0O/2oepihLDs7iccq8vIXtkqlVf2k9qc1xNTHcIX52lW2paeb7yFVJbCvC9CQjY7jz93Bf5/g5AIIfXEQDvnRhJfSJumT3gLImbpg9KObg/z15eeDeptAC43WPz7Oqh1Fi1HnBqMYw1CGljjjf80SbOVaVYFh0bACwpWq53E20Qs+tFklSjVQRkM5Y50G9+gNOlyrDlitdUSABXOx/+2ip+3wTQFFzwZZInxVyanl77lcMPPMQZqAroDD6COD7uIGUpAu9cQ85UcZqGu3ttscxRAcC9HQzX6A0GkRWVYcp3LkTeuwGs8EDWdgHbFoGvnRNb2i2lETZbRcDrYmpWag8/z1lwHzgT8nApZWGo+A6bKJ7iG5sB3OWRpboCyi4jO8JjBJOo2lDdFAppxv9uJ7eqKuInICqF7dszyPRiN8kVq0efbMw6JHBkLadN1CCK8pq21vbnLY+9/MsDXU9c2PPUbZ/d27XmZ28ezI9/+7n0ue0rOEa5M6IidpKS13bMskPP1LSYVgB3ViSnfk91UEHv5J01MVCDquShieUnkET8TGWSjncmpARrnDONn9rKn/0YB0GYqQeDJzqR/7xUmWWRN2d9g+ZJ0yRmmXpRVAhbc730GxJVD229uds0tnkomQ5OVqsGxcPaPoU+UVVWwCOiI7cbY5fruW4DPlVIP82bYeM0PPardpuZ0H/KQ8PUBF57rrIUHMGrLtu9VOW49GRNBO4DsLzq3HI4jBQyEu1RubWJlDumwS818cgFN9NS138LXf+HOHE1GjemGcPxyuHv4tCqIoCfpzfkCDPUZj2v/MPrJKhyU4CuhgHGS5R+5uAl2YdGx4+WLofqzk4f+sCM64x08dBMzEMFpRnIR2fAHWn8wQ5dnuowslcH+ycB7GLpWldSxgE/+o+rS3988l5KUuPXUkkyztJe3Mff9OMz3V1UZCzlTZQh2Npz77+MzMQMNJIqRjWerFOL40iJubHua6PXv57kXOIAmqaNbgwH+ny4aRz8z7u4S92AuHderzed7AX21dB4aXPGMfEbNZ/woH6R9WveT+LkKxfr+X55KNBatwkRRn/OVWomUClSfrVzY4GUy1ulhk+mZ8FIlsD7+L3koVZUNibV+K5SiE9zJ15m8c10rROnICtPnKVP/rmBEakV5ncfqWnimp0X6xelYfsUrT0f/CPJTtqeCfN1l27lUlRUxRxN72ixn/7b9fTTmgJzqqxsEAZoZhoMPdhHYTAFfDdQYLhgR6l5HJRYvrY/7lB+1nlT8MMTjTxf73LrDfMQAi5NwfyBh5O7FFDHb2pGllpCwhbGiQROLbj8cLffllaDzmpBsKbyftxVfsukPlXZgC8sOfH5RSe7ujb9i2tSaKnNznh0yEhyBCtfrs7JCE8tTvO+ypxM9qJcGPmwgYprrk+QY1XgqGVBtjZgWa16bLIL0jpNsd1Z2/71adKcrG1/p63taofjqxVfi3nQU7t7wy3P+Z+ZCk9uk+JJOZ6M+Rn50yhpsrYu9mQHeeoG29i/Rzr9jaeiijI6pPfz5gFbHJotkhsylCeGkiKTYE3WG8QEfVN4nJr1fwAAAP//AwD5JjHhAczf'), 
		type='angle')
		
	# -> Winkelauflösung für einzelne Stufen ermitteln
	winkelaufloesung = dict()
	for stufe in gom.app.project.stages:
		# --> Stufen für Auslesen des Bauteilwinkels aktiv schalten
		gom.script.sys.show_stage(stage=stufe)
		
		# --> Bauteilwinkel auslesen
		# ---> HINWEIS: Winkel werden in rad ausgegeben!!!
		bauteilwinkel = np.round(np.rad2deg(gom.app.project.actual_elements['Bauteilwinkel'].angle), 2)
		
		# --> Winkelauflösung für aktuelle Stufe festlegen
		winkelaufloesung[stufe.name] = np.append(np.arange(startwinkel, 180 - bauteilwinkel, schrittweite), 180 - bauteilwinkel)
	
	# -> Winkelauflösung der einzelnen Stufen zusammenführen
	winkel_ges = np.array([])
	for stufe in winkelaufloesung.keys():
		winkel_ges = np.union1d(winkel_ges, winkelaufloesung[stufe])
	winkelaufloesung = winkel_ges
	#================================================================================================================================#
	for winkel in winkelaufloesung:
		# schnittebenen_bogen erzeugen
		schnittebene = 'B_Schnittebene_' + str(winkel)
		schnittebenen_bogen.append(schnittebene)
		
		#-> Ebenen durch Rotation der y-Ebene erzeugen
		MCAD_ELEMENT=gom.script.primitive.create_plane_by_rotation (
			angle=np.deg2rad(winkel), 
			axis={'glue_transformed': False, 'target': gom.app.project.inspection['Koordinatensystem'], 'type': 'axis_z'}, 
			name=schnittebene, 
			normal={'glue_transformed': False, 'target': gom.app.project.inspection['Koordinatensystem'], 'type': 'axis_y'}, 
			point=gom.app.project.inspection['Bogenmittelpunkt'], 
			properties=gom.Binary ('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'), 
			rotation_direction='counter_clockwise')
		
		gom.script.inspection.inspect_by_referenced_construction (elements=[gom.app.project.inspection[schnittebene]])
		
		gom.script.cad.edit_tags (
			add_tags=['Schnittebenen_Bogenbereich'], 
			elements=[gom.app.project.actual_elements[schnittebene]])
		
		# Bogenschnitt erzeugen
		bogenschnitt = 'B_Bogenschnitt_' + str(winkel)
		bogenschnitte.append(bogenschnitt)
		gom.script.selection3d.deselect_all ()
		gom.script.selection3d.invert_selection ()
		
		# -> Bogenschnitte durch verschneiden der schnittebenen_bogen mit Rohrgeometrie erzeugen
		MCAD_ELEMENT=gom.script.section.create_single_section_by_plane (
			name=bogenschnitt,
			position=0.0, 
			project_onto_theoretical_surface=True, 
			properties=gom.Binary ('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'), 
			reference_plane=gom.ActualReference (gom.app.project.inspection[schnittebene]))
			
		gom.script.cad.edit_tags (
			add_tags=['Schnitte_Bogenbereich'], 
			elements=[gom.app.project.actual_elements[bogenschnitt]])
	
	# Nur Ist-Bauteil einblenden
	gom.script.cad.show_element_exclusively (elements=gom.ElementSelection ({'category': ['key', 'elements', 'part', gom.app.project.parts['Bauteil'], 'explorer_category', 'actual_part']}))
	#================================================================================================================================#
	# Schwerpunkte aus Schnitten bestimmen
	
	# -> Liste anlegen mit allen Schnitten (Gerade Rohrabschnitte + Bogenbereich)
	schnitte_gesamt = linearschnitte1 + bogenschnitte + linearschnitte2
	schwerpunkte = list()
	
	for index in schnitte_gesamt:
		# Punkte anlegen
		schwerpunkt_name = 'Schwerpunkt_' + str(index)
		schwerpunkte.append(schwerpunkt_name)
		
		#-> Schwerpunkte erzeugen
		schwerpunkt=gom.script.primitive.create_centroid_from_section (
			element=gom.app.project.actual_elements[index],
			name=schwerpunkt_name, 
			max_gap_length=3.4, 
			properties=gom.Binary ('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'))
		
		#-> Schwerpunkte in Tags packen
		gom.script.cad.edit_tags (
			add_tags=['Schwerpunkte'], 
			elements=[gom.app.project.actual_elements[schwerpunkt_name]])
		
		#-> Inspektion X-Koordinate Schwerpunkt anlegen
		MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
			elements=[gom.app.project.actual_elements[schwerpunkt_name]], 
			nominal_value=0.0, 
			nominal_value_source='fixed_value',
			name=schwerpunkt_name + '.X', 
			properties=gom.Binary ('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'), 
			type='x')
			
		#-> Inspektion Y-Koordinate Schwerpunkt anlegen
		MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
			elements=[gom.app.project.actual_elements[schwerpunkt_name]], 
			nominal_value=0.0, 
			nominal_value_source='fixed_value',
			name=schwerpunkt_name + '.Y', 
			properties=gom.Binary ('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'), 
			type='y')
		
		#-> Inspektion X-Koordinate im lokalen Koordinatensystem (wird im Ergebnisexport für Berechnung des Biegeradius benötigt)
		MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
			csys=gom.app.project.inspection['Koordinatensystem'], 
			elements=[gom.app.project.actual_elements[schwerpunkt_name]], 
			nominal_value=0.0, 
			nominal_value_source='fixed_value',
			name=schwerpunkt_name + '.X(LOKAL)', 
			properties=gom.Binary ('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'), 
			type='x', 
			use_linked_csys=True)
		
		#-> Inspektion Y-Koordinate im lokalen Koordinatensystem (wird im Ergebnisexport für Berechnung des Biegeradius benötigt)
		MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
			csys=gom.app.project.inspection['Koordinatensystem'], 
			elements=[gom.app.project.actual_elements[schwerpunkt_name]], 
			nominal_value=0.0, 
			nominal_value_source='fixed_value',
			name=schwerpunkt_name + '.Y(LOKAL)', 
			properties=gom.Binary ('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'), 
			type='y', 
			use_linked_csys=True)	
		
		# -> Inspektionselemente (X/Y-Koordinaten) in Tag packen
		# gom.script.cad.edit_tags (
		#	add_tags=['X/Y-Koordinaten Schwerpunkte'], 
		#	elements=[gom.app.project.inspection[schwerpunkt_name + '.X'], gom.app.project.inspection[schwerpunkt_name + '.Y'], gom.app.project.inspection[schwerpunkt_name + '.X(LOKAL)'],gom.app.project.inspection[schwerpunkt_name + '.Y(LOKAL)']])
		
		gom.script.cad.edit_tags (
			add_tags=['X/Y-Koordinaten Schwerpunkte'], 
			elements=[gom.app.project.inspection[schwerpunkt_name + '.X'], gom.app.project.inspection[schwerpunkt_name + '.Y']])
	
	
		#-> Nur Bauteil einblenden (weil sonst Auswertung sehr langsam)
		gom.script.cad.show_element_exclusively (elements=gom.ElementSelection ({'category': ['key', 'elements', 'part', gom.app.project.parts['Bauteil'], 'explorer_category', 'actual_part']}))
	
	
	#================================================================================================================================#
	# Schwerpunktlinie erzeugen, Krümmungsverlauf berechnen und Inspektionspunkte auf Schwerpunktlinie erzeugen (für Auswertung für Krümmung über Biegewinkel)
	
	# -> Kurve aus Schwerpunkten erzeugen (Polylinie)
	markers = []
	idx = 0
	for schwerpunkt in schwerpunkte:
		markers.append ({'index': idx, 'parameters': {'point_trait': gom.app.project.actual_elements[schwerpunkt], 'type': 'free'}, 'type': 'marker'})
		idx = idx + 1
	
	sequence = []
	for i in range(0, len(markers)):
		sequence.append ({'index': i, 'type': 'marker'})
		if i + 1 < len(markers):
			sequence.append ({'type': 'segment'})
	
	pathes = [{'parameters': {'sequence' : sequence, 'type': 'spline'}, 'type': 'path'}]
	
	MCAD_ELEMENT=gom.script.curve.create_curve_polyline (
			curve_parts={'markers': markers, 'pathes' : pathes, 'with_normals': False}, name='Schwerpunktlinie',
			properties=gom.Binary ('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'))
	
	# -> Krümmung konstruieren und Krümmung inspizieren
	
	MCAD_ELEMENT=gom.script.curve.create_curvature_value_curve (
		curve=gom.app.project.actual_elements['Schwerpunktlinie'], 
		max_point_distance=diskretisierung_schwerpunktlinie, 
		properties=gom.Binary ('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'))
	
	MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
		elements=[gom.app.project.actual_elements['Schwerpunktlinie.κ']], 
		nominal_value=0.0, 
		nominal_value_source='fixed_value', 
		properties=gom.Binary ('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'), 
		type='curvature')
	
	# -> Schwerpunkte auf Krümmungsverlauf projizieren
	
	#-> Liste anlegen mit Projektionspunkten für Krümmungsauswertung
	projektionspunkte_kruemmung = list()
	
	for i in schwerpunkte:
		
		projektionspunkt_kruemmung_name = 'Projektionspunkt_' + str(i)
		projektionspunkte_kruemmung.append(projektionspunkt_kruemmung_name)
		
		#-> Projektionspunkt auf Krümmungsverlauf erzeugen
		MCAD_ELEMENT=gom.script.primitive.create_surface_point_by_projection (
			ignore_normal=False, 
			name=projektionspunkt_kruemmung_name, 
			point=gom.app.project.actual_elements[i], 
			project_element={'projection_type': 'curve', 'target': gom.app.project.actual_elements['Schwerpunktlinie.κ']}, 
			properties=gom.Binary ('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'))
		
		#-> Projektionspunkte in Tag packen
		gom.script.cad.edit_tags (
			add_tags=['Projektionspunkte_Kruemmung'], 
			elements=[gom.app.project.actual_elements[projektionspunkt_kruemmung_name]])
		
		#-> Krümmung auf den Projektionspunkten auswerten
		MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
			elements=[gom.app.project.actual_elements[projektionspunkt_kruemmung_name]], 
			nominal_value=0.0, 
			nominal_value_source='fixed_value',
			name= projektionspunkt_kruemmung_name + '.kappa', 
			properties=gom.Binary ('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'), 
			type='curvature')
		
		# -> Inspektionselemente in Tag packen 
		gom.script.cad.edit_tags (
			add_tags=['Projektionspunkte_Kruemmung_Maß'], 
			elements=[gom.app.project.inspection[projektionspunkt_kruemmung_name + '.kappa']])	
	
	#-> Projektionspunkte und Inspektionen auf Projektionspunkten ausblenden
	gom.script.cad.hide_element (elements=gom.ElementSelection ({'category': ['key', 'elements', 'tags', 'Projektionspunkte_Kruemmung']}, {'category': ['key', 'elements', 'tags', 'Projektionspunkte_Kruemmung_Maß']}))
	
	#================================================================================================================================#
	# Biegeradius ermitteln
	
	# -> Selektion der Schwerpunktlinie
	
	gom.script.cad.show_element_exclusively (elements=[gom.app.project.actual_elements['Schwerpunktlinie']])
	# gom.script.selection3d.select_all ()
	
	gom.script.selection3d.select_by_circle (
		circle={'center': gom.Vec3d (0.0, 0.0, 0.0), 'normal': gom.Vec3d (0.0, 0.0, 1.0), 'radius': biegeradius}, 
		is_hollow=False, 
		target=gom.app.project.actual_elements['Schwerpunktlinie'])
	
	# -> Erzeugen des Fitting-Kreis
	MCAD_ELEMENT=gom.script.primitive.create_fitting_circle (
		method='best_fit', 
		name='Kreis_Biegeradius', 
		normal={'direction': gom.Vec3d (0.0, 0.0, 1.0), 'point': gom.Vec3d (0.0, 0.0, 0.0), 'type': 'projected'}, 
		properties=gom.Binary ('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'), 
		sigma=2)
	
	# -> Auswertung des Biegeradius
	MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
		elements=[gom.app.project.actual_elements['Kreis_Biegeradius']], 
		nominal_value=0.0, 
		nominal_value_source='fixed_value', 
		properties=gom.Binary ('eAHsW3uMVGcV/20DLSCUUrEt1Npx2MJSOruzy7LsDo/ltZVtAQnQbUMik9mZ2d2ReTEzy6PadhrS1Aex8Q+tMVE0ahuDqcF/sMbEmqhtTKTRpko01Rh8oCFpxcRiE8H8znfPfvfO3HksWyC0LGH3zr3fPef7znfO7zy+M7tymdDQivaD2DywftPADuwqxFKlYiQykE5mktnS9kIunyyUUskizE8LZmLOLMzCHMyaA+DfLb9IjgHYPTC4c2dgcNvO7QMbdwW6wl3LnRecn5PHZoC3WvRGUz8tPQDie04ea0EYwG1AOYk0ksggigQKiOEAoihiDDEkkJNPeeSQQhYl7P7vyWM3YDaAaUB5GDnkkMaeF0hPJlKewctNAAJAOY0YhkEGUZSESR68x2uSjSGOvYhhVD4XkMQIkvI3iziS+HI72d0HYD5QHkUOGbRju+e9HVVvbT7COfQDWCVymoZOAM/tP/rjB3+/5ez3v3r8sz86f2LDdKDciXaE0Y5e3ASUB5FFEXkkEUcJONX7wBwSugPALJ/FHEQJF9/hBG8BcCNQLqKEgkhqFG2n+O6Ou4Hn56K8GmMoIYM01oLXSZEurzNIooQYAogjJzLm4ktYgyA6EUQAWcRkFO/sE/pxoZYEZxAUKuR8SPYxIFdcBMfrqA7EUURRRudxHwJII4UAPoUADmAMKRkZkuVzU5KIIIC8bEUIB0Qv8liFAB7DanS4+JF7h2dF1IoEDiHgGsW5jDjrI70kUhiVVUTQjTDCQtuOsOuJIIscCsgghjRWOeulxIad9Q5jVGSXlnHktAgjrn+UIedUQEKUiyOMZLnONNKy5gQSzs7xedjzXKVin4ccCnaefMvNJeSaUwSLEEd44j/X6h1r6URQlLWkkJBxXHcBo8I7hBJyyCOCMPI46POcVEsyKlNnFOU2IrKvRYdapvujY1TyBedvwtHZtKM1WZHcCh+57Be5l0RzuYsh+U0OWUSQkbUmZDe5Yu9uhOS+mW2373P3XP1HWKn50a+Uma5UV1W5y1ZLvXrcM2k9bp2w7VbHqgxHcu8QCeuVylz/UvZWZyj3Kydjo7+VuzQ1Ga9Fq2gHEaJNMIuOgjZLzaHzMJgWFfkkxEMRA4haS1FPeldXVpdDHykrakKbICOthx6CLrbagVrJvX+lROQuYdyRkdUk9Y3vX8nQH+5HSuwoJbZnwrRmpWJRnAhEb2ril8J7zgdYm2PsxQBxb9OyqoXfXumpl6uOKq4csr+baFU/QrMxp1905o2+vJ6GmuZ9Xh2dmede/+iNt2y8+N6Nza60fvnHBe7ozH/E1CKHyn1+N6OzAvIooh3jKCIpUQd9bRRxjKPgpKkliUk0mmWexnsB9EsmRi9ddKJexvFu/8MMZlioeDF4KZY5bzIjMXGOSYeNh+cdkwUqavONNhkbFVpJydqZ8R2Se4ykzBz6EcQSBBFBEEEsRUDyPF43jqHsKmmDlx+v/LXl6umTxRO/nJSxPHOvAK5rTWXeQg+o+bpmNGaMic69mmV3uBrFr01fqHldbaxqpFteDNkvEhuX6scarEEAg9iGIazHFgxiEwKSOVETiRbjSAtKEU0MPhUd3GifwAxT8uJbjAYNThAliKam9lKqQjI7C9aTgliGXgSltsTqoakcjiMrtaU1GBG6xNFm4u3rGnFtaERjDaPGxUQLOZY+1K03Vmuu64ypLoakMuiu4TVfj2qsM6w1RzGCFA46u2GRmRGDqYdGcUBqciWMIYA2sf+DckUUL8oVsZyI1ubBCH5urBPVeaciSE+TCLIU5l911NIYa6detfOisVYUFItZB6ZstJ5skJd7o3Ec/Rrjw0uTlfIJO1SI1CaOu1R6izGKklT1LM09Qlnjw/3ymxLXO34RY2PZN9JQt7+51PVMVpeqdejS4xNvruquXV/ZaNZatfekoTp79s64+nmt7NoiBN/plNr3Pb5nBF5ffvnzBv8qho0qa50jXK48tJHO21rEsOSIzei9H/Jd+1o7dfwwObCemEblYDkrFUlzVsBsw4uZQbRdIpZN3Y9Mfra6smrMurKyMz5gqa/krB7yypxY8co/A6w3hpEQT5INBXuC/rMYz9Z7ASysOJc3J0jccc1nWP2gH6Y2WMx69Eae2wcA3AyUN1a99fBE/PP62+T1YUD6AHh9MwA2DxSdM+k0XvnEm9184tcpoHHthUP1Oydayp8hiXsBfLBiUVRcb+fEOMZlgr/bSqK3AZgJlHc5x74RPISHMIgEIi+S5m4AQ87ktwBoBcph9KIHcXRiBAl0I4TliKEPw+DRdieS6JNQdAWGkUAIfehFH8LoQw/6kEAYI+jEMN5568J3SbcVYBtEmUInxNPgtGjFA22G//z0zTs54yCAuc6MvaN3usYu7lKJLHZmz22YDZRZamHoWvn2K7c8/SuO+wiAORVSNKUDTX3jPe7toDRZtnvkON+e5nTVrJvHT6ok9XpZjneQWu02kFsB6TBhr4om5EVsPEr6XNu8CvruYnUUGTGDJJ7oJxdVsg2i3qalYaszYq5IaaFp7JFrbdWhxMQIzj0uOqF6ZmToVxwwZUOCXAFnU+71sS1o3CnnfGUXqc1w9R7dIXx1lm6paWn2wjdIbT7A9ya6eu53nn7xS3x/MyBdRLyOAPjQxEjqE8uaxio4SwKL6TFSDu6fF87OvZtUugDc7ml3YtsLpcay7ohTrCCA0NbGHXfx0mrOVaXIfaG8qhqe2gDcWrFc7yZaL7/1VZJUo9WmJmKQOfHufITTpcoQaXhNhQRwsf/Jby3h59UATcHVuWWyC22jounptV+9+OEnOANVAZ3BxzGMTzrIWd1UteVecqaK0zTcTWfzZI4qAVbMo8g5/QgGH7llpv5sMqLps8lfzaWeOr3Vv6pM6gov7s1mtMRzuFEURCGZcZ0IkfI2APd4APF+qc93CThumVCYDVKZYK9TBLyupGb35Mmf6xo5E/JwqXx5rPIOexi+zTfWArjLs1PmLMHsDPvqTF+MyRNtpGzqdASJf/WRW0MFZFvfgibFz7CIqkYBpvHpt5ti4LcDXm9rgPXVDSRXqd1DolfLkcC+ZZQLQY9OgNeEinOZU6893vmxdSvPbD9/au/0l0qvj379azNf7H+5++WnOEa5M2Ii9JOS1/SNXEPPN7UYlVZtcuq21YQUsw8vaIoB4SvYJAMCDXWXv+M4BAI+84C9jsP6zxtNsVRzZrGBUEDjIz6a4k1UCFtoOP0bEtVowEYObkPZ5KFkgiSWjkbFm9umgSHRI5ajI7Kht5uZyPVMN1gcKaef403tPHVbs1pxfsIaKA+NGRM495P6UnDiJ1U8+gPjH3QnTz/bFIEHACxqOLci9iKFvNR9qIna0ckdsxFnEft+62ZaHWbcwDDjo5y4arhbJkbLvXL4uzjPhnjgF1UYcgQdRkF6ePgHsX+VmzqDRgZrPFL1zwy8IfvQ7vjs6uVQ3dlgQn+bdx1Yzhu7HPPQOIStrDz+YJFTHe2fBVorV25Bv4Yj/tyZi/N/englV6lxbPUqGW9p0+oz//PjM1UJq8Ot5k0EIGrZA+K/ZC/HDDSiqkQcHkFTw4aREpfPAqmNYv96mHMZBtAxZeSh4x7y4abx8D/u4i5tAMQR87rbJHJlNqDQsGgPBuH5iVpJZ6wOhmEL7ydx+M1TrXy/tpl6Q5zcL7nKyYQ4tS1GAx1zuG8kS3R7ZiV5NIQCdQz1Qn2aIrGsgO+lm504BUmR1J44822eIRiRWmH+8OmmJq59/5X65W3os/a8+08kO2l7JgS3nL6JS1FRVXI0TZaVPvRvV9OHairMqbL2QxigmVE9HkUSjw1RGEwFPwCU6crtKDWP3RLTN1fb0IimFj8aOIVEkCXouZMqGhcVloBEf9km+UdtxXV8uSpW5W4QW91tr1YDZn9+qhqg9m3SGPuFGLNse4Tzg3/WX4LzRRiFGyXnJUKDNlKhs3C7phMPTnUhTJrvdHFmwMZwVr/poO7f7BWzRQpV85IFC5taniqhjba4F5mJNqjvrCMZRUHKj16YyY75eoyT2JbRwk9q75ZaTPJwUjTRZtxpAGf+ksRT8uWbhmqk0aYla2BUO4IZHvOzm/T5M+6J18tQFQV1p5tDWdYiGeNnsfiPk+Wk2X99TibLVC6MSdlnRhm0JuqLrUJ167GxFSLLaskXJrsgrdZV2rm1618fJc1JI/tFXAzEXpPqTy0sYWZkFcBdqXx2DXmqsG2GNCBfTjAxA8GWRsQ4xJstrXeUqkvSXaogtZsUWTjQ8kmb6L1vUQVHpv0fAAD//wMABXdw0wHKsw=='), 
		type='radius')
	
	
	# Nur Ist-Bauteil einblenden
	gom.script.cad.show_element_exclusively (elements=gom.ElementSelection ({'category': ['key', 'elements', 'part', gom.app.project.parts['Bauteil'], 'explorer_category', 'actual_part']}))
	#================================================================================================================================#
	# Konstruktion von Schnittlinien und Schnittpunkten mit den Querschnitten am Innen- und Außenbogen 
	
	for i in linearschnitte1:
		
		# -> Liste mit Linien und Namen anlegen für ersten geraden Profilabschnitt
		schnittlinie_linear1 = 'Schnittlinie_linear1_' +str(i)
		schnittlinien_linear1.append(schnittlinie_linear1)
	
		# -> Schnittlinien erzeugen für ersten geraden Profilabschnitt
		MCAD_ELEMENT=gom.script.primitive.create_line_by_intersection (
			name=schnittlinie_linear1, 
			plane1=gom.app.system['system_plane_z'], 
			plane2=gom.app.project.actual_elements[i], 
			properties=gom.Binary ('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'))
		
		gom.script.cad.edit_tags (
			add_tags=['Schnittlinien_gerader_Profilabschnitt1'], 
			elements=[gom.app.project.actual_elements[schnittlinie_linear1]])
			
	for i in bogenschnitte:
		
		# -> Liste mit Linien und Namen anlegen für Bogenbereich
		schnittlinie_bogen = 'Schnittlinie_Bogen_' + str(i)
		schnittlinien_bogen.append(schnittlinie_bogen)
		
		# -> Schnittlinien erzeugen für Bogenbereich
		MCAD_ELEMENT=gom.script.primitive.create_line_by_intersection (
			name=schnittlinie_bogen, 
			plane1=gom.app.system['system_plane_z'], 
			plane2=gom.app.project.actual_elements[i], 
			properties=gom.Binary ('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'))
		
		gom.script.cad.edit_tags (
			add_tags=['Schnittlinien_Bogenbereich'], 
			elements=[gom.app.project.actual_elements[schnittlinie_bogen]])
			
	for i in linearschnitte2:
		
		# -> Liste mit Linien und Namen anlegen für zweiten geraden Profilabschnitt
		schnittlinie_linear2 = 'Schnittlinie_linear1_' + str(i)
		schnittlinien_linear2.append(schnittlinie_linear2)
		
		# -> Schnittlinien erzeugen für zweiten geraden Profilabschnitt
		MCAD_ELEMENT=gom.script.primitive.create_line_by_intersection (
			name=schnittlinie_linear2, 
			plane1=gom.app.project.actual_elements[i], 
			plane2=gom.app.system['system_plane_z'], 
			properties=gom.Binary ('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'))
	
	
		gom.script.cad.edit_tags (
			add_tags=['Schnittlinien_gerader_Profilabschnitt2'], 
			elements=[gom.app.project.actual_elements[schnittlinie_linear2]])
			
	# Schnittpunkte zwischen Schnittlinien und Querschnitten erzeugen
	gom.script.cad.show_element (elements=gom.ElementSelection ({'category': ['key', 'elements', 'tags', 'Schnitte_erster_gerader_Profilabschnitt']}, {'category': ['key', 'elements', 'tags', 'Schnitte_zweiter_gerader_Profilabschnitt']}, {'category': ['key', 'elements', 'tags', 'Schnitte_Bogenbereich']}))
	
	# -> Neue Liste mit allen Schnittlinien erzeugen
	schnittlinien_gesamt = schnittlinien_linear1 + schnittlinien_bogen + schnittlinien_linear2
	
	# -> Schnittpunkte am Außenbogen
	for a, b in zip(schnitte_gesamt, schnittlinien_gesamt):
		
		# -> Listen mit Punkten und Namen anlegen für Schnittpunkte
		schnittpunkt_aussen = 'Schnittpunkt_aussen_' + str(a)
		schnittpunkte_aussen.append(schnittpunkt_aussen)
		
		# -> Schnittpunkte am Aussenbogen zwischen Schnittlinien und Querschnitten erzeugen
		MCAD_ELEMENT=gom.script.primitive.create_point_by_line_intersection (
		intersect_element={'projection_type': 'curve', 'target': gom.app.project.actual_elements[a]}, 
		line=gom.app.project.actual_elements[b], 
		name=schnittpunkt_aussen, 
		point_number=1.0, 
		properties=gom.Binary ('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'))
	
		#-> Elemente in Tag packen
		gom.script.cad.edit_tags (
			add_tags=['Schnittpunkte_Außenbogen'], 
			elements=[gom.app.project.actual_elements[schnittpunkt_aussen]])
	
		#-> X/Y-Koordinaten der Schnittpunkte bestimmen
		MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
			elements=[gom.app.project.actual_elements[schnittpunkt_aussen]], 
			nominal_value=0.0, 
			nominal_value_source='fixed_value',
			name=schnittpunkt_aussen + '.X', 
			properties=gom.Binary ('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'), 
			type='x')
	
		MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
			elements=[gom.app.project.actual_elements[schnittpunkt_aussen]], 
			nominal_value=0.0, 
			nominal_value_source='fixed_value',
			name=schnittpunkt_aussen + '.Y',
			properties=gom.Binary ('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'), 
			type='y')
		
		#-> X/Y-Koordinaten der Schnittpunkte im lokalen Koordinatensystem bestimmen (wird beim Ergebnisexport für die Berechnung des Außenradius zur Berechnung des Einfalls benötigt)
		MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
			csys=gom.app.project.inspection['Koordinatensystem'], 
			elements=[gom.app.project.actual_elements[schnittpunkt_aussen]], 
			nominal_value=0.0, 
			nominal_value_source='fixed_value',
			name=schnittpunkt_aussen + '.X(LOKAL)', 
			properties=gom.Binary ('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'), 
			type='x', 
			use_linked_csys=True)
		
		MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
			csys=gom.app.project.inspection['Koordinatensystem'], 
			elements=[gom.app.project.actual_elements[schnittpunkt_aussen]], 
			nominal_value=0.0, 
			nominal_value_source='fixed_value',
			name=schnittpunkt_aussen + '.Y(LOKAL)', 
			properties=gom.Binary ('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'), 
			type='y', 
			use_linked_csys=True)
		
		#-> Inspektionselemente in Tag packen
		# gom.script.cad.edit_tags (
		#	add_tags=['Schnittpunkte_Außenbogen_X/Y-Koordinaten'], 
		#	elements=[gom.app.project.inspection[schnittpunkt_aussen + '.X'], gom.app.project.inspection[schnittpunkt_aussen + '.Y'], gom.app.project.inspection[schnittpunkt_aussen + '.X(LOKAL)'], gom.app.project.inspection[schnittpunkt_aussen + '.Y(LOKAL)']])
		
		gom.script.cad.edit_tags (
			add_tags=['Schnittpunkte_Außenbogen_X/Y-Koordinaten'], 
			elements=[gom.app.project.inspection[schnittpunkt_aussen + '.X'], gom.app.project.inspection[schnittpunkt_aussen + '.Y']])
	
		
		#-> Inspektionselemente und Punkte ausblenden, da sonst GUI das Skript langsam macht
		gom.script.cad.hide_element (elements=[gom.app.project.inspection[schnittpunkt_aussen + '.X'], gom.app.project.inspection[schnittpunkt_aussen + '.Y'], gom.app.project.actual_elements[schnittpunkt_aussen]])
		
	# -> Schnittpunkte am Innenbogen
	
	for a, b in zip(schnitte_gesamt, schnittlinien_gesamt):
		
		# -> Listen mit Punkten und Namen anlegen für Schnittpunkte
		schnittpunkt_innen = 'Schnittpunkt_innen_' + str(a)
		schnittpunkte_innen.append(schnittpunkt_innen)
		
		# -> Schnittpunkte am Innenbogen zwischen Schnittlinien und Querschnitten erzeugen
		MCAD_ELEMENT=gom.script.primitive.create_point_by_line_intersection (
		intersect_element={'projection_type': 'curve', 'target': gom.app.project.actual_elements[a]}, 
		line=gom.app.project.actual_elements[b], 
		name=schnittpunkt_innen, 
		point_number=4.0, 
		properties=gom.Binary ('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'))
	
		#-> Elemente in Tag packen
		gom.script.cad.edit_tags (
			add_tags=['Schnittpunkte_Innenbogen'], 
			elements=[gom.app.project.actual_elements[schnittpunkt_innen]])
		
		
		#-> X/Y-Koordinaten der Schnittpunkte bestimmen
		MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
			elements=[gom.app.project.actual_elements[schnittpunkt_innen]], 
			nominal_value=0.0, 
			nominal_value_source='fixed_value',
			name=schnittpunkt_innen + '.X', 
			properties=gom.Binary ('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'), 
			type='x')
	
		MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
			elements=[gom.app.project.actual_elements[schnittpunkt_innen]], 
			nominal_value=0.0, 
			nominal_value_source='fixed_value',
			name=schnittpunkt_innen + '.Y',
			properties=gom.Binary ('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'), 
			type='y')
		
		#-> Inspektionselemente in Tag packen
		gom.script.cad.edit_tags (
			add_tags=['Schnittpunkte_Innenbogen_X/Y-Koordinaten'], 
			elements=[gom.app.project.inspection[schnittpunkt_innen + '.X'], gom.app.project.inspection[schnittpunkt_innen + '.Y']])
		
		#-> Inspektionselemente und Schnittpunkte ausblenden, da GUI das Skript sonst langsam macht
		gom.script.cad.hide_element (elements=[gom.app.project.inspection[schnittpunkt_innen + '.X'], gom.app.project.inspection[schnittpunkt_innen + '.Y'], gom.app.project.actual_elements[schnittpunkt_innen]])
	
	
	# Nur Ist-Bauteil einblenden
	gom.script.cad.show_element_exclusively (elements=gom.ElementSelection ({'category': ['key', 'elements', 'part', gom.app.project.parts['Bauteil'], 'explorer_category', 'actual_part']}))
			
	#-> Inspektionen ausblenden, da GUI ansonsten zu langsam
	#gom.script.cad.hide_element (elements=gom.ElementSelection ({'category': ['key', 'elements', 'tags', 'Schnittpunkte_Innenbogen_X/Y-Koordinaten']}))
	#gom.script.cad.hide_element (elements=gom.ElementSelection ({'category': ['key', 'elements', 'tags', 'Schnittpunkte_Außenbogen_X/Y-Koordinaten']}))
	#================================================================================================================================#
	# Durchmesser Haupt- und Nebenachse bestimmen
	
	#-> Schnitte einblenden
	gom.script.cad.show_element (elements=gom.ElementSelection ({'category': ['key', 'elements', 'tags', 'Schnitte_erster_gerader_Profilabschnitt']}, {'category': ['key', 'elements', 'tags', 'Schnitte_zweiter_gerader_Profilabschnitt']}, {'category': ['key', 'elements', 'tags', 'Schnitte_Bogenbereich']}))
	
	# Durchmesser Nebenachse mittels Messchieberfunktion
	for i in schnitte_gesamt:
		# -> Vertikale Abstände erzeugen
		abstand_vertikal = 'Durchmesser_vertikal_' + str(i)
		abstaende_vertikal.append(abstand_vertikal)
		
		# -> Vertikale Abstände im Bogenbereich durch Antasten der Bogenschnitte entlang z-Achse erzeugen
		# -> Alle Elemente eines Bogenschnittes auswählen
		gom.script.selection3d.select_all_points_of_element (elements=[gom.app.project.actual_elements[i]])
		# -> Abstandselement erzeugen
		MCAD_ELEMENT=gom.script.inspection.create_outer_caliper_disc (
			clearance=5.0, 
			name=abstand_vertikal, 
			point1={'point': gom.Vec3d (0.0, 0.0, messschieber_abstand)}, 
			point2={'point': gom.Vec3d (0.0, 0.0, -messschieber_abstand)}, 
			properties=gom.Binary ('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'), 
			radius=radius_schneide)
			
		# -> Elemente in Tag packen	
		gom.script.cad.edit_tags (
			add_tags=['Durchmesser Nebenachse'], 
			elements=[gom.app.project.actual_elements[abstand_vertikal]])
			
		# -> Maße auswerten	
		MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
			distance_restriction='xyz', 
			elements=[gom.app.project.actual_elements[abstand_vertikal]], 
			nominal_value=0.0, 
			nominal_value_source='fixed_value',
			name=abstand_vertikal + '.L', 
			properties=gom.Binary ('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'), 
			type='distance')
		
		#-> Inspektionselemente in Tag packen
		gom.script.cad.edit_tags (
			add_tags=['Durchmesser_Nebenachse_Maß'], 
			elements=[gom.app.project.inspection[abstand_vertikal + '.L']])
		
		#-> Inspektionselement und Element ausblenden
		gom.script.cad.hide_element (elements=[gom.app.project.inspection[abstand_vertikal + '.L'], gom.app.project.actual_elements[abstand_vertikal]])
	
	# Durchmesser Hauptachse mittels Punktabstaende
	
	for a, b in zip(schnittpunkte_innen, schnittpunkte_aussen):
		
		# -> Horizontale Abstände erzeugen
		abstand_horizontal = 'Durchmesser_horizontal_' + str(a)
		abstaende_horizontal.append(abstand_horizontal)
		
		# -> Abstände berechnen (Puntkabstände)
		MCAD_ELEMENT=gom.script.inspection.create_distance_by_2_points (
			name=abstand_horizontal, 
			point1=gom.app.project.actual_elements[a], 
			point2=gom.app.project.actual_elements[b],
			properties=gom.Binary ('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'))
		
		# -> Elemente in Tag packen
		gom.script.cad.edit_tags (
			add_tags=['Durchmesser Hauptachse'], 
			elements=[gom.app.project.actual_elements[abstand_horizontal]])
	
		# -> Punktabstände auswerten (Maße erzeugen)
		MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
			distance_restriction='xyz', 
			elements=[gom.app.project.actual_elements[abstand_horizontal]], 
			nominal_value=0.0, 
			nominal_value_source='fixed_value',
			name=abstand_horizontal + '.L',
			properties=gom.Binary ('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'), 
			type='distance')
		
		#-> Inspektionselemente in Tag packen
		gom.script.cad.edit_tags (
			add_tags=['Durchmesser_Hauptachse_Maß'], 
			elements=[gom.app.project.inspection[abstand_horizontal + '.L']])
		
		#-> Inspektionselement ausblenden
		gom.script.cad.hide_element (elements=[gom.app.project.inspection[abstand_horizontal + '.L']])
	#========================================================================================================================================
	# Wanddickenverläufe am Innen- und Außenbogen
	
	# Wanddicke (Flächenabstand) als Contour-Wert erzeugen
	gom.script.cad.show_element_exclusively (elements=gom.ElementSelection ({'category': ['key', 'elements', 'part', gom.app.project.parts['Bauteil'], 'explorer_category', 'actual_part']}))
	
	gom.script.selection3d.select_all ()
	
	MCAD_ELEMENT=gom.script.inspection.create_surface_distance (
		deviation_calculation_type='shortest_distance', 
		invert_surface_direction=True, 
		max_angle_between_normals=1.047197551, 
		max_opening_angle=0.5235987756, 
		name='Wanddicke', 
		project_element=gom.app.project.parts['Bauteil'].actual, 
		properties=gom.Binary ('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'), 
		search_distance=10.0)
	
	
	# Kurven (Polylinie) am Innen- und Außenbogen aus Schnittpunkten erzeugen
	
	# -> Kurve (Polylinie) aus Schnittpunkten am Außenbogen erzeugen
	markers = []
	idx = 0
	for punkt_aussenbogen in schnittpunkte_aussen:
		markers.append ({'index': idx, 'parameters': {'point_trait': gom.app.project.actual_elements[punkt_aussenbogen], 'type': 'free'}, 'type': 'marker'})
		idx = idx + 1
	
	sequence = []
	for i in range(0, len(markers)):
		sequence.append ({'index': i, 'type': 'marker'})
		if i + 1 < len(markers):
			sequence.append ({'type': 'segment'})
	
	pathes = [{'parameters': {'sequence' : sequence, 'type': 'spline'}, 'type': 'path'}]
	
	MCAD_ELEMENT=gom.script.curve.create_curve_polyline (
			curve_parts={'markers': markers, 'pathes' : pathes, 'with_normals': False}, name='Polylinie_Aussenbogen',
			properties=gom.Binary ('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'))
	
	# -> Kurve (Polylinie) aus Schnittpunkten am Innenbogen erzeugen
	markers = []
	idx = 0
	for punkt_innenbogen in schnittpunkte_innen:
		markers.append ({'index': idx, 'parameters': {'point_trait': gom.app.project.actual_elements[punkt_innenbogen], 'type': 'free'}, 'type': 'marker'})
		idx = idx + 1
	
	sequence = []
	for i in range(0, len(markers)):
		sequence.append ({'index': i, 'type': 'marker'})
		if i + 1 < len(markers):
			sequence.append ({'type': 'segment'})
	
	pathes = [{'parameters': {'sequence' : sequence, 'type': 'spline'}, 'type': 'path'}]
	
	MCAD_ELEMENT=gom.script.curve.create_curve_polyline (
			curve_parts={'markers': markers, 'pathes' : pathes, 'with_normals': False}, name='Polylinie_Innenbogen',
			properties=gom.Binary ('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'))
	
	# -> Projizierte Kurven (Flächenkurven)aus zuvor generierten Polylinien erzeugen
	
	# -> Am Außenbogen
	
	MCAD_ELEMENT=gom.script.section.create_projected_curve (
		curve=gom.app.project.actual_elements['Polylinie_Aussenbogen'], 
		direction=gom.app.project.actual_elements['Polylinie_Aussenbogen'], 
		name='Flaechenkurve_Aussenbogen', 
		properties=gom.Binary ('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'), 
		target=gom.app.project.parts['Bauteil'].actual)
	
	# -> Am Innenbogen
	MCAD_ELEMENT=gom.script.section.create_projected_curve (
		curve=gom.app.project.actual_elements['Polylinie_Innenbogen'], 
		direction=gom.app.project.actual_elements['Polylinie_Innenbogen'], 
		name='Flaechenkurve_Innenbogen', 
		properties=gom.Binary ('eAHEmF1sHFcVx38uSXFDTXApH60QrBwDpu36K47rblISkrhKSpKGxHGrCFjtesf2kt31Zncdx0VpJ+UBkCpVSNAiXkCCglCkoDxUBVQBQgIhqNKnQlXUB1QkhCgCKkERqDH6nzvXM+vdtd2HiImS3J2593z+z/+cmamFcnp61+B5Dk1+4uDkCaZquWKjnslMloJyUGkcry1Ug1qjGNRxVxc30bONbfSwrQf4/sAvg3ng9OThkydTh4+dPD55YCo1Ojy6MzoQXVcvdaNbXf7G5q6PAPnpq5e6mABuh7BEjjwBJbLMsECFCgEzNFigRpYSRbuTZYkiBRrM8/CNVy/dQAp4J4QHWk49uLrzxTek6wPA+83oLp1gK4R1yuQoUeJXn/nbmJ5ox7Y1FjUIOE+Dlf9I47uAG+1sg5rZNcfASzp7bSu8eQPhHuZpUKbEx9E6IEfB1mUCGuRIRV5Ksv69lz5G6CNFhZzt0p2zJn/GpDkL+kyKNC9TIiBlq2q03+8aYoY6ddtd5S5SFr8UnyfFEvMUbWeaOlVyzBCQIUWVmt1dokaOKrtJcYE9DCX0SftQk0d5FiiwTCqxS7bMRv5JXkCROfMiwxjDDJvseEfsT4aKZdxlZXfkryKWj/zNM2exK9k+adrBbOKPYiibahQIoh0usvJTmZbPBQpR5vR8uOm5j0r8PB1JiO3UqaSWdMKmDDuYYXj1r3xt3hvLyVA3X4Rp7ZPfNeZMd9rQXyXDMFXOt3kuqQ3bVV5nl+I2a7HvJEco8/nxe3zka9H/hRb/z1l8G4ZQZStt/0pShQxl86lgWZNnzVFP231n1Vjb5802tZMQR6fd07Wx8R657FZavNksGvvNX2F7wKqtGiFRsciuVmPWdBTIGmZyVm8foz+qJmeBrBmyyP7/I9w+B9crws2MMP6WGaHfuMOxRIMUA6usKa7r406rV63rzLPAElkWqRjv3cus4bS+YUaUG4d+rTwDud9Cl1jP/YrZ/rG/qg8cBPWlpq4mBJQNLQ4N2YhlzpBjzn4LQ7OGI/UEsdWTg+o3dwG3QjhndT7I8aZzJ1pOHXpcNuwFdlu328II8N1z33zuky8fee0H37jy5R//+9n96n4jDDLMIBO8HcLDVAybru/y0sT9PZ0aog/rtWUZeDOwBUIFRWT22cs6ZzNB2K3lHcC7N4zHIovGGb87KqHvBW6CcCpitwynOMVhCmR+JJmngemomx8B+iEcI8e4xWOCu8mRZhejjDBG2vrOBPeQJk+BGXba0xz3MM6MncizixHb9enjly9K7geBnjV2O9arUzQOmBlPBkD2q+c9dEWnt0SD0b5e/fJzSnLSWYuJK0OS1nm+8IE+Fs0I2ZclWdNU7xrJSoXvgFnKhtaAR/dKvp9w9if2HI12bLd43g4Wf629TvVlm8Bef8Ti76Uk/fEceu1b0nMr0J3A7X3R0698TecPgdWJ1hngPas7xZnLxpuqGM1+8WzoNSSvy69t/5CkjALvg1Bd3p3UpCOvshSZjThA3K06XDT5BX62J5nBjhAeAG5Z425zkOOh5OgLEukB7MtWA6prFSMPydxbHCAsAIIKsLL34rc/qt97QONqwhXXRjxRqH34dWChcoOimrEC9OCjssCXnbfgAfJ8LirvVto4coc0C3wCbXKi7zUb+0FPmxKej6hojhoLFt4Cz6al+xjw4abyvc9Gg1Er5SOrKd1PzqhYd7VeKy2O2sVfyArlQZZIR7eLmq5wfu0dtefvdLLbNXD/iuFi9sL+dlmbtj07KXD2TklTsfVFWVMJrJx4Mv/4V0/t+9SLB2Yzjz2w7zeP/OHnf/7Hf3/yzKul4aT2og16WZPUDOlF8z/9PWn3xdYRhuPAbRB2Fuep2UNjkRIN6nzhtk0pUFn2bVKBCkgZd+1q2YhG4+uZiCL/9cqmVA47tmkClgdUNZrCs6bE9+ACr/90fdFd4ZcUfV+DMSX48Lz61KYEKNXbIaxSt1lO70jeorjgzz0nYV6ZL7cYuu0LfuXUysrW3r+8TYbeD+zYMAZ1zlCkaj1aMPJvlo7l/TtynbO/TTrX2pVUMfu6kvBMcqyDaHO8/2SMviE827UiJ67KgjVNX22/f6NdyDaqNlfsrVc3r1i+B6NG0uqOsKpXYzWBKlnOUSRgid7562GHh02rHcnX2yfevB6623UqlwO98ooUYs77Y+V6WNCuUzgL6tGroiuhhV9Lux93ClbwrsC/PqVsxvz+9727w/Xz6zuRy6yQ5iQ9cbd0bAjczsDR9yZ9bZLJzgFVRsAPv7gpwfrodLN5J6vc+C+mlIUPE3BhWmI0cL0DwoNNu/xQdto68+Y+X3n+7qRPHC1XitEnluRopD6kmAkfIpgBmyI6xy4iWT/ZOo4s2Hii/qOSlyp1n67n1xcVvSj4gXutqJjalp9eX1Bkk589naCYqZ/aqeNvlamTo1knb5O94Z+l9Y2MvPXYiLuTDC3baK+wPb1PYnx9+ClPleM+N0ZTY4hReev4G3+O8RLdUHDWXrS0KpC7sClTPaHFpsqY3Oo4qbF2meefWV8YYff/AAAA//8DAIXVYuoBSBE='), 
		target=gom.app.project.parts['Bauteil'].actual)
	
	# -> Werte aus Contourplot/Oberflächenanalyse "Wanddicke" entlang der Flächenkurven auswerten
	
	#-> Am Außenbogen
	MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
		elements=[gom.app.project.actual_elements['Flaechenkurve_Aussenbogen']], 
		fixed_point_distance=5.0, 
		nominal_value=0.0, 
		nominal_value_source='fixed_value', 
		properties=gom.Binary ('eAHEmX9slHcdx1+dsAGjMnQTNo1eSu1wcKUtpXQHDMboAhuwZhRGiHq59q7tyd31uLtSujl3zD/m3HQx2dT4z/yJf6AYTAxqTDQxLptzLJqoy8z0D5ZpJkYzjdMlA/P+fJ9vn+euv25MsiO0zz3P9/v58f68Pz++TwfG8vEDG9qPsbPv1h19dzNQSmUr5USiL5fJZwqV/tJYMVOqZDNl3KeJxTQvYQnNLGkG3ljzVGYUONS3a9++2K69+/r7bhuIdXV0rQ82BJ+zJxehW03+RmOfTmCo7ezJJnqBG6CaI8UgGXIkGWKMAgUyDFFhjBJJcmTtTpIJsqSpMMq9V549eQUx4N1QvW3arnumVv72den6ALDSjG7SDhZCtUyeFDlyPP2xv3friVYsqbOoQoZjVLj4hjReA1xpeyuUzK4RVr+gvRcWwptXUN3MKBXy5LgFXWdIkbbrPBkqpIgFXkqyfm6hhU5aiFEgZat054jJHzJpzoIWkyLNk+TIELOrYrDer1rHEGXKtrrIWmKGX4z7iDHBKFlbGadMkRRDZEgQo0jJ7k5QIkWRTcS4n82si+iT9nU1Hg0yRppJYpFVsmU48E/yMmQZMS8SdNNBh8kOV4T+JChYxF1UNgX+CrHBwN9BRgy7nK2TplUMR/4JQ9lUIk0mWOGQlZ+KtHxOkw4ip+cdNc89KuHzeCAhtFO7olriEZsSrGKIjqn/8rV2bSgnQdl8Eae1Tn6XGDHdcWN/kQQdFDk2w3NJrdiq/ByrhNuwYT+bHLHMx8ev8ciXgt/paf4fNXwrxlBFK24/JalAgrz5lLaoybNa1ON231nVPePzWptmkhCiM9PTemy8Ry66hWneNMrGVvNX3F5t2VYMmCgsklPZmDQdaZLGmZTl20doDbLJWSBr1hmy7zzCM8fgciFcWxF63nJFaLXa4apEhRirp6qmal0LayxfdV1mlDEmSDJOwereFoaNp+V5I6LYOPbrylcg913sUtVz38Jq/+Df1Ad2gPpSTVcTA/LGFseGZFBlDpNixL6LQ8PGI/UEVasvtqvfrAWuheqI5Xk7/TX77p62a+ejsmErsMm63QLrtyeOPvmTO1/cff57Xzn98I//c2a7ul8n7XTQTi9XQXUXBeOm67u80HtH82wN0cN6YVIGLgUWQFWgqJh9/JT22UxQXaTLm4D3zovHOONWM36/R0LfByyG6kBQ3RLsZz+7SJP4kWQeAg4E3Xw30ArVblL0GB69bCRFnA100Uk3ces7vdxMnEHSDLHenqa4mR6GbMcgG+i0VR/tP3VccltB3b6qPFDs1RddZJTXY4xTsm9fe78sbgGWBRbXrt4XWdvW5RFpC6zXXLIUqup8qiD1u5++5qHntO6DQHMdiq4Gl8laRRrqiYZDaKoDHzyt3QuCMW3bcn3zU1N07qpn6Ol1kjb7tOPDvjeYWJIvSrK8Wl4nWcTw/ThJ3nInwwNbJd/PW9sja/YEK5YZPjeAsUHXXqewsnnwtU8ZGzzDHHpJ6+6ySYx22GiGFGVlw/ls1LO0Rcdl95cHJG1RZIxdaXq9lVG8fMe48FVJuxa0bypLbw+efuEJ7d8JVhV0nQCum1opJk1al1B9kJXhJOw1RD+nzi/7kKR0ASugqpnG7dRcJ9SSZBkOKp46larOuMlP87PNstWjOGvC9gDXQ7VI2cR1WSsT6GrrGlEFcjiUhwNZ12Ep8MnrS5aGc9cmOw/K+Pc4+hkcIiaf/QuHb/35Cn1fDXpeA3UtgUJte56/JG1wcevxb9wobZtBCRiB0TVsX5KV8P46Y2FyI7nGHgXnngdkgaef9/cuBvlEUEinF+jdN0mzEksJGT07LTdEPAIO/TFckgtzoV4Oxi03ni5cKv0+Seei8j+2bqpKui9qUaINBi1lhJIlg0aXM3FJ3gt8uKYM324jXpeV5N1TZN1Oylqq7uq6XlrIgOO/8D7KEumIpFt1tP6OxqxvakctJ+dGJcmI8U1+5fjk69IyL+lnAsZNev4s6kL+/HaJq6f4AVuznjRH1shc1UF1BF2repw49czBzz2+f9uziy8+tfHBu7b1v/xM7NWv/+uW/060Xac1XnvWOkvSJNVWg3EDOP7thpzxaM0uzvdwz+xxclQo8+nrG1KgitbSoALVHlHKzTWT1gN0zjkcdK9/v9SQSp9lKu7KUOWECp+EHSNpgsOMPfcbCfWjQThGRPm7o0aSe4UwbPxWa9eg5kJ+wHg0bvxWsFY4S+x6cTSHH63mTuhmh+tZNUnmk6sYpG7S8PBzZZrXftoQCp54YeH3kTz3pbkFNFU/I9vuAFbNa1uZw2Qp2jwoJvq3GK6H+9Jf5sjvokrnmjk8w6OFx7G8Foc/Wz+dN11nGjScuCJj1vZ99P5g+e9x8zV6voSNNt3o9SJeMhjbgzY+3R3RXa9h1IKLJDlKlgwTLB+9HHb4sXO6HdFXKY+9eTl0+041XbdyVHUlLJsvFy6HBbOTqrZPjv1S2t9Kn5w9vr5busiKaS6FH9soHfMS15exuWZVEUeZV+I7uUYN19vNuYmpd6d6c6rcdYOEMi/DDx9qyHB/EK2vv0KjwrjVSPf61s16h/4ksfV5F04Cs8yCOqQ0nbtKrnio6jW6KbS+4r/yTlZ8f4qTqTpFKyXUkESPe8lw/wGBobPM1VBV4wlX+fPOIRsMdc7TOl17wuosI8nj5Hnk2ee+G41zPTj1Y3oYkKWPvN2A+HRzo2namqRGCOe1Bmd3Pv7+q3MzKmhFfkqpPWeEYutdCdvOfVsaUtDt3vlP2VtrpRLYlSjRNUrdM3e+XaQ8dZ1rM53FovraXrlEfVMHGc+/cCxQ3PPBKbjCt7ZJg+eTP8hoDnF/u7BjGFRp0jf/rqGeWyGXfv3kpVj8z6snLq5d/td3SYdvXKHFsik1dXBSTCb51Q+kZ96i6gPdWFHVn5E0gBZo+2MUlrnOT768+hPj3Jo0qodaNDBljGw5WtP/N4fCNxqhqhs/37BDrOR/AAAA//8DAMKOdmMBD3c='), 
		value_source=gom.app.project.actual_elements['Wanddicke'])
	
	#-> Am Innenbogen
	MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
		elements=[gom.app.project.actual_elements['Flaechenkurve_Innenbogen']], 
		fixed_point_distance=5.0, 
		nominal_value=0.0, 
		nominal_value_source='fixed_value', 
		properties=gom.Binary ('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'), 
		value_source=gom.app.project.actual_elements['Wanddicke'])
		
	###############################################################################################
	# Wanddicken am Innen- und Außenbogen an diskreten Winkelpositionen auswerten
	
	for i in winkelaufloesung:
		
		MCAD_ELEMENT=gom.script.inspection.inspect_by_deviation_label (point={'interpolated': True, 'normal': gom.app.project.actual_elements['Schnittpunkt_aussen_B_Bogenschnitt_' + str(i)].normal, 'point': gom.app.project.actual_elements['Schnittpunkt_aussen_B_Bogenschnitt_' + str(i)].center_coordinate, 'target': gom.app.project.inspection['Flaechenkurve_Aussenbogen.sd - Wanddicke']})
		MCAD_ELEMENT=gom.script.inspection.inspect_by_deviation_label (point={'interpolated': True, 'normal': gom.app.project.actual_elements['Schnittpunkt_innen_B_Bogenschnitt_' + str(i)].normal, 'point': gom.app.project.actual_elements['Schnittpunkt_innen_B_Bogenschnitt_' + str(i)].center_coordinate, 'target': gom.app.project.inspection['Flaechenkurve_Innenbogen.sd - Wanddicke']})
	
	#========================================================================================================================================
	# -> Kurvenlängen Schwerpunktlinie, Polylinie_Innenbogen, Polylinie_Aussenbogen berechnen
	
	# -> Außenbogen
	MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
		elements=[gom.app.project.actual_elements['Polylinie_Aussenbogen']], 
		nominal_value=0.0, 
		nominal_value_source='fixed_value',
		name='Kurvenlaenge_Aussenbogen', 
		properties=gom.Binary ('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'), 
		type='curve_length')
		
	#-> Schwerpunktlinie
	MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
		elements=[gom.app.project.actual_elements['Schwerpunktlinie']], 
		nominal_value=0.0, 
		nominal_value_source='fixed_value',
		name='Kurvenlaenge_Schwerpunktlinie', 
		properties=gom.Binary ('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'), 
		type='curve_length')
	
	#-> Innenbogen
	MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
		elements=[gom.app.project.actual_elements['Polylinie_Innenbogen']], 
		nominal_value=0.0, 
		nominal_value_source='fixed_value',
		name='Kurvenlaenge_Innenbogen', 
		properties=gom.Binary ('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'), 
		type='curve_length')
	
	#========================================================================================================================================
	# Flächenvergleich zwischen Soll- und Ist
	
	#-> Flächenvergleich anlegen
	gom.script.cad.show_element (elements=[gom.app.project.parts['Bauteil'].actual])
	
	gom.script.selection3d.select_all_points_of_element (elements=[gom.app.project.parts['Bauteil'].actual])
	
	MCAD_ELEMENT=gom.script.comparison.create_multiple_surface_comparison_on_actual (
		deviation_calculation_type='shortest_distance', 
		max_angle_between_normals=1.047197551, 
		max_opening_angle=0.5235987756, 
		name='Flaechenvergleich_Ist_vs_Soll', 
		properties=gom.Binary ('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'), 
		search_distance=10.0)
	
	gom.script.selection3d.deselect_all ()
	
	#-> MIN/MAX Abweichungsfähnchen erstellen (global für gesamten Flächenvergleich)
	gom.script.cad.show_element_exclusively (elements=[gom.app.project.inspection['Flaechenvergleich_Ist_vs_Soll']])
	
	gom.script.selection3d.select_all ()
	
	MCAD_ELEMENT=gom.script.comparison.create_min_max_deviation_label (
		deviation_type='min_picker',
		name='Flaechenvergleich_Ist_vs_Soll_global_Min', 
		properties=gom.Binary ('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'))
	
	gom.script.selection3d.select_all ()
	
	MCAD_ELEMENT=gom.script.comparison.create_min_max_deviation_label (
		deviation_type='max_picker',
		name='Flaechenvergleich_Ist_vs_Soll_global_Max', 
		properties=gom.Binary ('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'))
	
	
	#-> MIN/MAX Abweichungsfähnchen auf jedem Querschnitt anlegen
	
	#->"Werte aus Oberflächenanalyse" auf Schnitte anwenden
	for i in schnitte_gesamt:
		
		flaechenvergleich_querschnitt = 'Flaechenabw_Querschnitt' + str(i)
		flaechenvergleiche_querschnitte.append(flaechenvergleich_querschnitt)
		
		MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
			elements=[gom.app.project.actual_elements[i]], 
			fixed_point_distance=0.5, 
			nominal_value=0.0, 
			nominal_value_source='fixed_value',
			name=flaechenvergleich_querschnitt, 
			properties=gom.Binary ('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'), 
			value_source=gom.app.project.inspection['Flaechenvergleich_Ist_vs_Soll'])
			
		# -> Elemente in Tag packen
		gom.script.cad.edit_tags (
			add_tags=['Flaechenabweichung_Querschnitte'], 
			elements=[gom.app.project.inspection[flaechenvergleich_querschnitt]])
	
	
	#-> MIN-Abweichungsfahnen auf Querschnitten erzeugen
	for j in flaechenvergleiche_querschnitte:
			
		abweichungsfahne_MIN = 'Abweichungsfahne_MIN_' +str(j)
		abweichungsfahnen_flaechenvergleich_MIN.append(abweichungsfahne_MIN)
		
		gom.script.cad.show_element_exclusively (elements=[gom.app.project.inspection[j]])
		gom.script.selection3d.select_all ()
	
		MCAD_ELEMENT=gom.script.comparison.create_min_max_deviation_label (
			deviation_type='min_picker',
			name=abweichungsfahne_MIN, 
			properties=gom.Binary ('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'))
	
		# -> Elemente in Tag packen
		#gom.script.cad.edit_tags (
		#	add_tags=['Abweichungsfahnen_MIN_Flaechenabweichung_Querschnitte'], 
		#	elements=[gom.app.project.inspection[abweichungsfahne_MIN]])
	
	
	#-> MAX-Abweichungsfahnen auf Querschnitten erzeugen
	for x in flaechenvergleiche_querschnitte:
		
		abweichungsfahne_MAX = 'Abweichungsfahne_MAX_' +str(x)
		abweichungsfahnen_flaechenvergleich_MIN.append(abweichungsfahne_MAX)
		
		gom.script.cad.show_element_exclusively (elements=[gom.app.project.inspection[x]])
		gom.script.selection3d.select_all ()
	
		MCAD_ELEMENT=gom.script.comparison.create_min_max_deviation_label (
			deviation_type='max_picker',
			name=abweichungsfahne_MAX,  
			properties=gom.Binary ('eAHEmFuMnGUZx3/TtLA9rLUVRYjaybLICuyx27qdbel26ZIutti0y0KayGRm59vdsXPqHLpdDGFILxStIV4gihcYDIekCaZXqDGBGxPDReshSqMhXhQkBAxGEzEaWfN/3u/dOexMd4Np/C52v3nnfZ/D/3me//O8M5XP9k7v6jvDoYkDByeOMVVMpMulWGwiE2SDXPloMV8IiuV0UMI9ETbSuYlNdLKpE3j96KVgHjgxMXn8eHTyvuNHJ+6eig4NDO0MD4TPxfMdaCniF9b0RG4FkrmL5yOMADdDNUOCJAEZ4syQJ0eOgBnK5CkSJ0PaVuIskCZFmXkevu7i+XVEgY9B9e4Vpx5Y3vm7D6TrM8CnzeiITrABqiWyJMiQ4ZdfeX9Y32jHpiaLygScoczSv6Tx48B1drZM0eyao+eyzo6vgx0RqnuZp0yWDHeh94AEKXvPElAmQTT0UpL1dx9dDNJFlBwJ26WVUyZ/xqQ5C7pMijQvkiEgam+FcL/f1c8MJUq2u8CdRA2/KF8jygLzpG1nLyUKJJghIEaUAkVbXaBIggKjRHmEvfTX6ZP2/gaPkuRJsUi0bpdsmQ39k7yANHPmRYxhBhgw2bUdNX9i5CziLiqjy/7KztxVdFxdQrfpclLLROkxT0tUyFAmToq0YZ6jRNrs7jN052wtZTsCTpO2826HUO3iDrrsrcQ8eRaIUyFn+O5j1nwoEfAFukMcnR8ORY+cx9RnzIbNyqWDoNxuqAxFLUsBVYve42H8TpIwW+Pm1yyB/c9ZZL/bp5y9E7gBqnPkydLH0YZzx1acOnRONuwHRq1i1jMIPH/6mZ9/6Q+H3/vx0xce/9k/Xx5XBQ3SxwB9jHA9VCcNQ+WjapfLI/d2tisqD9mHizJwC7AeqgIlT4aHXtI58Uqk+g293g58YlU8KlSs6l8/IqGfAjZCdcq8jhHjfu5nkhSxn0rmCWA6ZITDQDdUA3azixl2Gnoj9DLLMLPsoZdhdhm6vexh2D5pbYAkIyTZwx5GSDBAgp28tmNyu+R+Duhssvu0Rcjn2szuegBkv+rmwQs6vT4k17Ft+uS5rp4tm3PiQr+ktecoj8nBFRk9/wPp+DywrUmHglK0GhAXZy1vAx7dL02eL8fr9hwJd2w1ZFvxbpG8VUqKb/ZP92iXl1Pvm2eID38oTTcAHXU5fE/47Xee1PlDYDWj9xjwyeWdcUosGjupetRLar3Ga6h/Xnpv6w5JGQJutIwQF+ikmFN+xUkzG9a6eFw1WTH5KV7dWx/NlelMtUPCe4DtTe42wizBGQP1yCWJ9IHzJayG574ffFASt7vkMACUNsDS/sd+dJs+7wWFoc4VwVEjDZFSjUD0nWs8nuweeFQW+BL0FnyZJF8NS30lhRy+XZqViFbFziJ7tpmN3aBvGwKeDGlpjlqCvNwr3fcBtzaU8j3WVIasrA8vh3SchFGuVvXeLK2G2mO/kBW1tFlnMZGdsmq1BvHbv8iqDoG8tLQkr3o3vPhuO78aRxqH6aXxVlGdNjx3kuLUHZKmcuwKo6oSGf3Vs+tm3x0bW3hoYnEfx8fmvx//9itPdr167MXHn63XnqZEnrhJakz5iuHT+4K0t2fdME13AzdBtb04T+Ou9/ieWuLsTWtSIPy71qhABSbKcK1t0agoQZGTIZ3+4401qfRprK6vEtC0o+qWsDPETbDWXElc+Y2E+u5Q6yT16XewQZKbRGctPSsmyZfRtE0EFUtPoXujs8TeN9YXyblq5nktDoDqvqFGfG0UwtEzbniI0kRTKf72yppQ8HRSYzcfyStPXV1A2JDvBW5Z1bYSJ0lTsJFAmeiHYddK/Fhf4tTv65WubIKqsLGI9LbiDZfljTi8bU1j1Qxv1e+cuAJ569E+en/8QAI9bp4EVytYY7wWTwdvGIx9Ya+q70pOv9Jd07z6TIG4zZ8BC2ybvxZ2iGS2trSjfiJ/4j/XQnerZugwUI2KV2qt6M3ctbDA9/pmThDmyoEkaUtW3bZqE9BbZ2VLEuj/n7lBDWu6hTY/S73zWWXLOHBXyBjD7j5b1Y1Oqa+MdRysT8obFZdvASWbZ1VsZ9+/3H31QtJeMZUjmPxr8tJPlCkjH0c235uSHDVB9/x1/2hVK+1z2jd4l80OWUl64ovSsWqxthesnwX0o4BzuebsT76+JsH+ftQcf1lbpmJouF8m3Mh14k8S28wFteGi7UjGWOTK9cKofRdyLjR2oT//P7uQBvgtITi63ImqZJ7C9zABj0wLjJuBzXaxqN/l0/eETYOtrgIrf4Lx+mqtyQ3Z7ope5rkx6fMJ6adVpar7GSacfqtYv/AXsObQ1oL562c+SjAP/H3z0m2D/7bLus/LZh2izqzZ1pxAW771UXTKLZ9A7XRqhNEgoygoRirXohX/U/uk098FaqPMBGeWqUMxVbMTHTWONQdCmUM2l2oyUdFIogjAz/c9hnnLqZ9z6/8LAAD//wMAIkcFBAF67A=='))
	
		# -> Elemente in Tag packen
		#gom.script.cad.edit_tags (
		#	add_tags=['Abweichungsfahnen_MAX_Flaechenabweichung_Querschnitte'], 
		#	elements=[gom.app.project.inspection[abweichungsfahne_MAX]])
	
	#-> Abweichungsfähnchen an diskreten Winkelpositionen am Innenbogen und am Außenbogen
	for i in winkelaufloesung:
		
			MCAD_ELEMENT=gom.script.inspection.inspect_by_deviation_label (point={'interpolated': True, 'normal': gom.app.project.actual_elements['Schnittpunkt_innen_B_Bogenschnitt_' + str(i)].normal, 'point': gom.app.project.actual_elements['Schnittpunkt_innen_B_Bogenschnitt_' + str(i)].center_coordinate, 'target': gom.app.project.inspection['Flaechenvergleich_Ist_vs_Soll']}, name='Flachenvergleich_Ist_vs_Soll_Innenbogen' +str(i))
			MCAD_ELEMENT=gom.script.inspection.inspect_by_deviation_label (point={'interpolated': True, 'normal': gom.app.project.actual_elements['Schnittpunkt_aussen_B_Bogenschnitt_' + str(i)].normal, 'point': gom.app.project.actual_elements['Schnittpunkt_aussen_B_Bogenschnitt_' + str(i)].center_coordinate, 'target': gom.app.project.inspection['Flaechenvergleich_Ist_vs_Soll']}, name='Flachenvergleich_Ist_vs_Soll_Aussenbogen' +str(i))
	
	#========================================================================================================================================
	# Diverse Inspektionen anlegen
	
	#-> X/Y-Koordinaten der Polylinien: Polyline_Aussenbogen, Polylinie_Innenbogen, Schwerpunktlinie
	
	MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
		elements=[gom.app.project.actual_elements['Polylinie_Aussenbogen'], gom.app.project.actual_elements['Polylinie_Innenbogen'], gom.app.project.actual_elements['Schwerpunktlinie']], 
		nominal_value=0.0, 
		nominal_value_source='fixed_value', 
		properties=gom.Binary ('eAHEmXuMVGcZxn/bAAUKpdgqtBqdLCull1l2l4XSAeRSINACJUBpQ9Rxdmd2d9yZ2WEusNtaO+gfVWls/EPbmGjrpdUExWCiqDHRaDSNWpqaqKSmmoipxmA01bTGpGCe9zvfnnNmbwOVdAhw5pzve6/P+7zvd+bASDF5cHXnKDu2bd66bR8HKpl8rZpKbSvkirlSbW9lpJyr1PK5Ku7TxjwWzmc+C5m/EPj5l8/mhoBD23bu35/YuWf/3m13HUj0dPWsCjYEnzMn5qJbbf5Gax9t6Z9z5kQba4GboFEgQx85CqTpZ4QSJXL0U2OECmkK5O1OmqPkyVJjiAfnnDlxFQngWmjcNWHX/eMrf/O6dL0LWGpGt2kHs6FRpUiGAgWe+8A/evVEK+Y3WVQjxyg1Lv5XGq8D5tjeGhWza5AVZ7X3wmx44yoa6xmiRpEC70PXOTJk7bpIjhoZEoGXkqx/N9BON+0kKJGxVbpz2OT3mzRnQbtJkeYxCuRI2FU5WO9XraSfKlVbXeZ2Eha/BA+R4ChD5G1lkiplMvSTI0WCMhW7e5QKGcqsI8HDrGdlRJ+0r4x51McIWcZIRFbJloHAP8nLkWfQvEjRSxddJjtcEfqTomQZd1lZF/iriPUF/vYxaLEr2DppWsZA5I9iKJsqZMkFK1xk5acyLZ+zZIPM6XlX7LmPSvg8GUgI7dSuqJZkxKYUy+ina/yvfI2vDeWkqJovwrTWye8Kg6Y7aegvk6KLMqOTPJfUmq0qTrNKcRuw2E8lRyjz+fFrfOQrwf/ZCf4fsfjWDKHKVtL+laQSKYrmU9ayJs/iUU/afWdV76TP4zZNJiGMzmRPm2PjPXLZLU3wplU0dpi/wvYKq7ZygETFIj1ejWnTkSVtmMlYvd1CR1BNzgJZs9Ii+9ZHePIcXKkIxxlhzSUzQodxh2OJGglWjLOmuK6d26xedV1liBGOkqZOyXhvAwOG0+qMGVFuHPp15RnIfRe6xHruW8j2H/u7+sBWUF+KdTUhoGhocWhIBywzTIZB+y4MDRiO1BPEVp/rVL+5HbgBGoNW553sje3bN2HXjsdkw0ZgnXW7WXQDzx556of3vLTr/Lc+f+qTP/jP6S3qft100kUna7kaGjspGTZd3+Xs2rsXTtUQfVgvjMnABcAsaCgoIrMPntQ+mwkac3V5K3D9jPGoUzfO+N1uCX0HMA8aBwJ2S3Ef97GTLKnvS+Yh4GDQzXcBHdDoJcMai8da7iBDktX00E0vSes7a7mTJH1k6WeVPc1wJ2votx19rKbbVr1/78ljktsB6vYN1YFyr77oMqO6HqFOxb596Z2yuB1YFFgcX70/snZ5j4/I8sB6zSULoKHOJwZp3v3cdY8+r3XvBhY2RdFxcJW8MVL/mmg6FE114AdOafesYEzbtFjf/NQUnbuaEXpqpaRNPe34tO8JJpb0S5IsrxY3SRYwfD9OU7TayfHIRsn389aWyJrdwYpFFp+bwNCga69TsbJ58NWPGho8wlz00tbdZZMQ7WKjGVKQlQ3n81HPspYdV91PHpC0uZExdqnp9VZG4+U7xoWnJe0G0L7xKt0ePP3MZ7V/Bxgr6DoFvH18pZA0Zl1C/CArw0nYa4h+Tp5f9B5J8awwQJ6C7VZsXW9RTxbHiVOEWPHL4Bcv1eceYAk0NDU52zQ5Ki9p8gwEnKpeKF6rmw1ZfrxeenyepqSENcCN0ChTNXE91iyVVg0OGoJlfjj2hyNfz7AUeHrwpKjx3zXi7gcUnrc5gFvABX0+9VeGN/90ib6vAD2PJTMO0VDb7hcuSxtc3HjsKzdL23pQiUfC6EYCT/o+Qa4B6Jkb+pVEpf/+R2SBB7j39176+HBA1RNbwK5bpVmlq5KPns4WW0R8BFz0R3A0opgr6tVgoHMD8OwF0u9pYLpi+efGdQ1J97QZhXJf0LQGqVi5aTg6nZTkPcB7Y0S/3YbIHiP9XePlsIWMNW3d1XWztBABx37mfZQl0hEp6MZQ8x0Ncl/Vjjgmp49KmkHDm/wq8JHXpWVG0E8WGDdL+tOuS/kLWySuGeIHbc0qshy+TeaKadVzdC1+qv/ku2NPf2HfptmL7n1t++iuTZvLo39a+szXN/772kPHtcZrz1vvSpukON/ULcDJr7XkjI/W1OL8lOCRXTeiqvLxG1tSIM5sb1GBuEeQcpPTmHUZnaSGDdhVXnu5JZW+ytQ+VKGqCRGfhI2SNsFhxZ77tYT64SMcVKL43RqT5F5SiLIHbXhwVK17Bw1HdcO3krXEWWLX86I1/Fij8KxudrmuGCsyX1zloHTTFg8/uWZ59UctRcEDLyR+n8lzT0wvoK3xCdl2N7BsRtuqDJOnbBOnkOjfk7hO5qm/yuHfRpVON9V4hEeJx6E8Hoe/WMeesVwnG2WcuDIjNlj47P3e6t/HzXP0TAUbbevR67m8bGHsDAaFie4I7nrRoxZcJs0R8uQ4yuKhK2GHH2wn2hF9WfP4G1dCt+9UE3WrRsUrIW3+uXQlLJgaVPE+OfILab+UPjl1fn23dJkV0lwJP36HdMwIXE9j003DAo4qr8I3Cq0arven0wNTb2f1bla16wYJVV6O7z3akuF+qG3mX0WjRt040r0gdrPeoT9KbHPdhZPAFLOgjkFt566WKz5UzRrdFNrM+K+8lYzvz4kyVXO+SkINSfB4kBwPH1QwdFq6BhpqPOEqf6I6ZIOhTpJap2sPWJ2WJLlOkeO/fP6b0Tw3B6d5TA8TsuD4m02ILzc3mmatSWqEcF5rcHYn8G//bXpEBa3ITynxc0YottmVsO08tKElBb3uV4Vxe+NWqoAdRQmuUeievufNRspD17k22Vksqm/5K5epb/wg4/EXjgXKezE4Z9d4ZpM0eDz5g4zmEPfriB3DoEGbvvm3Gc3YCrH04lOXY/G/rvnQxVtePL5KOnyEmk/F8TOz/8Xl+hXS50/6GuL8udq/4dg7LKmtvI/wLTOMlaKRGT+yCQ1j/Oo70jgjnXuItUbn+olMo2+J5X+IJmS6k5sndn9WnV6TDgmhFo1qOYN5gY7s/82h8G1NqOrmT7fsEEv5HwAAAP//AwBaXqBsARk/'), 
		type='x')
	
	MCAD_ELEMENT=gom.script.inspection.inspect_dimension (
		elements=[gom.app.project.actual_elements['Polylinie_Aussenbogen'], gom.app.project.actual_elements['Polylinie_Innenbogen'], gom.app.project.actual_elements['Schwerpunktlinie']], 
		nominal_value=0.0, 
		nominal_value_source='fixed_value', 
		properties=gom.Binary ('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'), 
		type='y')
		
	
	#========================================================================================================================================
	# Anpassung allgemeiner Projekteinstellungen
	# -> Exklusives Einblenden des Ist-Bauteils
	gom.script.cad.show_element_exclusively (elements=gom.ElementSelection ({'category': ['key', 'elements', 'part', gom.app.project.parts['Bauteil'], 'explorer_category', 'actual_part']}))
	
	#-> Ändern der X-Achsenskalierung der Diagramme zu den Wanddickenverläufen am Innen- und Außenbogen -> Angabe der prozentualen Kurvenlänge
	gom.script.diagram.edit_settings (
		biaxial_curve=False, 
		biaxial_curve_color=gom.Color (180, 56, 56, 255), 
		constant_thickness_curve=False, 
		constant_thickness_curve_color=gom.Color (180, 56, 56, 255), 
		curve_diagram_optimized_visualization=False, 
		curve_diagram_x_axis='length_in_percent', 
		distance_between_thickness_reduction_curves=5.0, 
		distribution={'split_mode': 'by type', 'use_second_axis': False}, 
		isotropic_tension_curve=False, 
		isotropic_tension_curve_color=gom.Color (180, 56, 56, 255), 
		pickers_draft=True, 
		safety_margin=10.0, 
		security_curve=False, 
		security_curve_color=gom.Color (180, 56, 56, 255), 
		show_extrema=False, 
		thickness_reduction_curves=False, 
		thickness_reduction_curves_color=gom.Color (180, 56, 56, 255), 
		y_axis_from_legend=False)
	
	gom.script.cad.show_element_exclusively (elements=[gom.app.project.inspection['Flaechenkurve_Aussenbogen.sd - Wanddicke'],
		gom.app.project.inspection['Flaechenkurve_Innenbogen.sd - Wanddicke']])	
	
	#Widget 11 Export der Daten 
	RESULT11=gom.script.sys.execute_user_defined_dialog (file='Widget11 Export.gdlg')
	
	return startwinkel, schrittweite, rohrdurchmesser, RESULT11.radiobuttons
		
	
	
	
	


